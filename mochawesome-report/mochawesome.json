{
  "stats": {
    "suites": 8,
    "tests": 40,
    "passes": 40,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-23T00:34:31.308Z",
    "end": "2022-04-23T00:34:33.857Z",
    "duration": 2549,
    "testsRegistered": 47,
    "passPercent": 85.1063829787234,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 7,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "19ee229b-b79f-42bf-b380-b8e2bf7a1deb",
      "title": "",
      "fullFile": "/home/school/api/test/test.js",
      "file": "/test/test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5cc45a73-a9af-402c-a8a5-a29cbcce2c01",
          "title": "Start Database",
          "fullFile": "/home/school/api/test/test.js",
          "file": "/test/test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Start Database\"",
              "fullTitle": "Start Database \"before all\" hook in \"Start Database\"",
              "timedOut": false,
              "duration": 28,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mongoose.connect(URI_TEST, done)",
              "err": {},
              "uuid": "e0ae6c5b-cceb-4648-a9f9-0826e17d52b1",
              "parentUUID": "5cc45a73-a9af-402c-a8a5-a29cbcce2c01",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d111afb1-55a2-4308-a83f-6f17d91cdccc",
              "title": "/Register",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"/Register\"",
                  "fullTitle": "Start Database /Register \"before each\" hook in \"/Register\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});",
                  "err": {},
                  "uuid": "9ab1ed1a-88fe-46a1-a742-b4ae7b661ed3",
                  "parentUUID": "d111afb1-55a2-4308-a83f-6f17d91cdccc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "[1]- Register",
                  "fullTitle": "Start Database /Register [1]- Register",
                  "timedOut": false,
                  "duration": 68,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', hooks.user).then(function(res){\n    expect(res.status).to.equal(201);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "2b7c6028-ee84-4acd-8d8a-28137ef48563",
                  "parentUUID": "d111afb1-55a2-4308-a83f-6f17d91cdccc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Invalid Schema",
                  "fullTitle": "Start Database /Register [2]- Invalid Schema",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "1d9e1566-0c85-4ff9-bb42-a7ef4e17611a",
                  "parentUUID": "d111afb1-55a2-4308-a83f-6f17d91cdccc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Invalid Password Pattern",
                  "fullTitle": "Start Database /Register [3]- Invalid Password Pattern",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: hooks.user.firstName,\n    lastName: hooks.user.lastName,\n    email: hooks.user.email,\n    password: \"abcdef1\"\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "daaa7ca9-2898-45b1-a8c5-45aec74d7bf6",
                  "parentUUID": "d111afb1-55a2-4308-a83f-6f17d91cdccc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Invalid Email Pattern",
                  "fullTitle": "Start Database /Register [4]- Invalid Email Pattern",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: hooks.user.firstName,\n    lastName: hooks.user.lastName,\n    email: 'abcdef',\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "8e50a5a2-5f94-4070-b580-4da4f9990b82",
                  "parentUUID": "d111afb1-55a2-4308-a83f-6f17d91cdccc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Invalid First Name Pattern",
                  "fullTitle": "Start Database /Register [4]- Invalid First Name Pattern",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: \"abc123\",\n    lastName: hooks.user.lastName,\n    email: hooks.user.email,\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "8ea67d1d-10ad-4fa6-aeaf-a9da57764bc5",
                  "parentUUID": "d111afb1-55a2-4308-a83f-6f17d91cdccc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Invalid Last Name Pattern",
                  "fullTitle": "Start Database /Register [5]- Invalid Last Name Pattern",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: hooks.user.firstName,\n    lastName: \"abc123\",\n    email: hooks.user.email,\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "7cd09f1a-c730-4d74-be6e-20f5b50e9d4b",
                  "parentUUID": "d111afb1-55a2-4308-a83f-6f17d91cdccc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b7c6028-ee84-4acd-8d8a-28137ef48563",
                "1d9e1566-0c85-4ff9-bb42-a7ef4e17611a",
                "daaa7ca9-2898-45b1-a8c5-45aec74d7bf6",
                "8e50a5a2-5f94-4070-b580-4da4f9990b82",
                "8ea67d1d-10ad-4fa6-aeaf-a9da57764bc5",
                "7cd09f1a-c730-4d74-be6e-20f5b50e9d4b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 81,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0cf1cdf8-ef36-4899-846c-9a9aebc1856e",
              "title": "/Login",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Login\"",
                  "fullTitle": "Start Database /Login \"before all\" hook in \"/Login\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', hooks.user).then();",
                  "err": {},
                  "uuid": "8ea6eb18-89a4-4261-828d-09ea6f6a7fb8",
                  "parentUUID": "0cf1cdf8-ef36-4899-846c-9a9aebc1856e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Login\"",
                  "fullTitle": "Start Database /Login \"after all\" hook in \"/Login\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});",
                  "err": {},
                  "uuid": "1976c183-5468-40b2-9243-afc2882dc10e",
                  "parentUUID": "0cf1cdf8-ef36-4899-846c-9a9aebc1856e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Login",
                  "fullTitle": "Start Database /Login [1]- Login",
                  "timedOut": false,
                  "duration": 45,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {\n    email: hooks.user.email,\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(202);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "868657c9-7e9a-4dc2-bce2-9250fc7c5df6",
                  "parentUUID": "0cf1cdf8-ef36-4899-846c-9a9aebc1856e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Empty Schema",
                  "fullTitle": "Start Database /Login [2]- Empty Schema",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "c79e90bb-d336-41eb-aa4a-e2d32c90f287",
                  "parentUUID": "0cf1cdf8-ef36-4899-846c-9a9aebc1856e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Invalid Login",
                  "fullTitle": "Start Database /Login [3]- Invalid Login",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {\n    email: '123@123.com',\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(409);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "ffe0a46e-f824-4cec-a3ca-8c3fa0ff0020",
                  "parentUUID": "0cf1cdf8-ef36-4899-846c-9a9aebc1856e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Invalid Fields",
                  "fullTitle": "Start Database /Login [4]- Invalid Fields",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {\n    firstName: hooks.user.firstName,\n    email: hooks.user.email,\n    password: hooks.user.password,\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "897de754-a8d1-4285-9812-2d043fadd436",
                  "parentUUID": "0cf1cdf8-ef36-4899-846c-9a9aebc1856e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "868657c9-7e9a-4dc2-bce2-9250fc7c5df6",
                "c79e90bb-d336-41eb-aa4a-e2d32c90f287",
                "ffe0a46e-f824-4cec-a3ca-8c3fa0ff0020",
                "897de754-a8d1-4285-9812-2d043fadd436"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 51,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8fe280d6-d89a-4d3f-8b04-885b121b2688",
              "title": "/Module",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Module\"",
                  "fullTitle": "Start Database /Module \"before all\" hook in \"/Module\"",
                  "timedOut": false,
                  "duration": 18,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function(res){\n    token = res.body.token;\n});",
                  "err": {},
                  "uuid": "33b36ab7-418c-4bf8-9e43-efcf54919a5e",
                  "parentUUID": "8fe280d6-d89a-4d3f-8b04-885b121b2688",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "[1]- Create Module",
                  "fullTitle": "Start Database /Module [1]- Create Module",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/module', token, hooks.module).then(function(res){\n    expect(res.status).to.equal(201);\n    module_id = res.body.body._id;\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "eeb459c8-701a-45ca-ab61-004ad02041d8",
                  "parentUUID": "8fe280d6-d89a-4d3f-8b04-885b121b2688",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Create Module Unauthorized",
                  "fullTitle": "Start Database /Module [2]- Create Module Unauthorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/module', token + \"00\", hooks.module).then(function(res){\n    expect(res.status).to.equal(401);\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "6edd6930-fa70-4293-af9c-559a9b87292c",
                  "parentUUID": "8fe280d6-d89a-4d3f-8b04-885b121b2688",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Invalid Schema",
                  "fullTitle": "Start Database /Module [3]- Invalid Schema",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/module', token, {}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "16752be1-26a4-4383-8aab-fc4f0195c69a",
                  "parentUUID": "8fe280d6-d89a-4d3f-8b04-885b121b2688",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Archive Module",
                  "fullTitle": "Start Database /Module [4]- Archive Module",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/module/${module_id}/archive`, token, { archived: true }).then(function(res){\n    expect(res.body.body.archived).to.equal(true);\n    expect(res.status).to.equal(200);\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "9e3a6f3a-7371-4899-b410-0cf4c2c6de95",
                  "parentUUID": "8fe280d6-d89a-4d3f-8b04-885b121b2688",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Get Module",
                  "fullTitle": "Start Database /Module [5]- Get Module",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/module/${module_id}`, token).then(function(res){\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "55e23c6c-a91c-4010-a786-4760a98050cf",
                  "parentUUID": "8fe280d6-d89a-4d3f-8b04-885b121b2688",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Update Module",
                  "fullTitle": "Start Database /Module [6]- Update Module",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/module/${module_id}`, token, {\n    name: \"Edited\",\n    color: hooks.module.color\n}).then(function(res){\n    expect(res.body.body.name).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "21633fde-c3d4-473e-8334-1e4cd56c3ca9",
                  "parentUUID": "8fe280d6-d89a-4d3f-8b04-885b121b2688",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Invalid Update Module",
                  "fullTitle": "Start Database /Module [7]- Invalid Update Module",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/module/${module_id}`, token, {\n    name: \"\",\n    color: hooks.module.color\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "bbcf139e-51fb-457e-8d9c-57421690c983",
                  "parentUUID": "8fe280d6-d89a-4d3f-8b04-885b121b2688",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eeb459c8-701a-45ca-ab61-004ad02041d8",
                "6edd6930-fa70-4293-af9c-559a9b87292c",
                "16752be1-26a4-4383-8aab-fc4f0195c69a",
                "9e3a6f3a-7371-4899-b410-0cf4c2c6de95",
                "55e23c6c-a91c-4010-a786-4760a98050cf",
                "21633fde-c3d4-473e-8334-1e4cd56c3ca9",
                "bbcf139e-51fb-457e-8d9c-57421690c983"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 39,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "44f2889a-51f9-4b1d-95b7-e49f34cd96b4",
              "title": "/Uf",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook for \"[1]- Create UF\"",
                  "fullTitle": "Start Database /Uf \"before all\" hook for \"[1]- Create UF\"",
                  "timedOut": true,
                  "duration": 2002,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    uf.moduleId = res.body.body._id;\n});",
                  "err": {
                    "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/school/api/test/test.js)",
                    "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/school/api/test/test.js)\n    at listOnTimeout (internal/timers.js:554:17)\n    at processTimers (internal/timers.js:497:7)",
                    "diff": null
                  },
                  "uuid": "26c96090-d9f6-49bc-a8a9-ebfef40ef0ca",
                  "parentUUID": "44f2889a-51f9-4b1d-95b7-e49f34cd96b4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Uf\"",
                  "fullTitle": "Start Database /Uf \"after all\" hook in \"/Uf\"",
                  "timedOut": false,
                  "duration": 6,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});",
                  "err": {},
                  "uuid": "1e24280d-48e2-4adc-8a80-3150a9f64fc3",
                  "parentUUID": "44f2889a-51f9-4b1d-95b7-e49f34cd96b4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create UF",
                  "fullTitle": "Start Database /Uf [1]- Create UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/uf/create', token, uf).then(function (res) {\n    expect(res.status).to.equal(201);\n    uf_id = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "dcfd487c-2694-4c99-ac91-cafc966f5ab6",
                  "parentUUID": "44f2889a-51f9-4b1d-95b7-e49f34cd96b4",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[2]- Create UF Unauthorized",
                  "fullTitle": "Start Database /Uf [2]- Create UF Unauthorized",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/uf/create', {}, uf).then(function (res) {\n    expect(res.status).to.equal(401);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "71836d90-9a06-4101-86ad-8b4412cca62a",
                  "parentUUID": "44f2889a-51f9-4b1d-95b7-e49f34cd96b4",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[3]- Invalid UF Schema ",
                  "fullTitle": "Start Database /Uf [3]- Invalid UF Schema ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/uf/create', token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "ba10291a-5ba2-42bc-9259-8d6b00eaec84",
                  "parentUUID": "44f2889a-51f9-4b1d-95b7-e49f34cd96b4",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[4]- Update UF",
                  "fullTitle": "Start Database /Uf [4]- Update UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uf.name = \"Edited\"\nrequest.edit(`/uf/${uf_id}/edit`, token, uf).then(function (res) {\n    expect(res.body.body.name).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "3cfb9b4c-8aff-4ab2-b6e0-8a8cbc7c0a09",
                  "parentUUID": "44f2889a-51f9-4b1d-95b7-e49f34cd96b4",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[5]- Get UF",
                  "fullTitle": "Start Database /Uf [5]- Get UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/uf/${uf_id}`, token, uf).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "5e45814e-83ef-4505-a3fd-58dfe25b188e",
                  "parentUUID": "44f2889a-51f9-4b1d-95b7-e49f34cd96b4",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[6]- Get Invalid UF",
                  "fullTitle": "Start Database /Uf [6]- Get Invalid UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/uf/${uf_id + \"0\"}`, token, uf).then(function (res) {\n    expect(res.status).to.equal(500);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "e91139a1-d416-417f-855d-8ef85855d707",
                  "parentUUID": "44f2889a-51f9-4b1d-95b7-e49f34cd96b4",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[7]- Create UF - Invalid Module",
                  "fullTitle": "Start Database /Uf [7]- Create UF - Invalid Module",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uf.moduleId = \"62575d1ddc2246861a6998e9\";\nrequest.post('/uf/create', token, uf).then(function (res) {\n    expect(res.status).to.equal(500);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "fddcd666-aca1-496c-82d7-511118f78456",
                  "parentUUID": "44f2889a-51f9-4b1d-95b7-e49f34cd96b4",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "dcfd487c-2694-4c99-ac91-cafc966f5ab6",
                "71836d90-9a06-4101-86ad-8b4412cca62a",
                "ba10291a-5ba2-42bc-9259-8d6b00eaec84",
                "3cfb9b4c-8aff-4ab2-b6e0-8a8cbc7c0a09",
                "5e45814e-83ef-4505-a3fd-58dfe25b188e",
                "e91139a1-d416-417f-855d-8ef85855d707",
                "fddcd666-aca1-496c-82d7-511118f78456"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "adac8ae4-0289-4a4f-8abf-ff76a00b28b3",
              "title": "/Task",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Task\"",
                  "fullTitle": "Start Database /Task \"before all\" hook in \"/Task\"",
                  "timedOut": false,
                  "duration": 78,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    uf.moduleId = res.body.body._id;\n});\nawait request.post('/uf/create', token, uf).then(function(res){\n    task.ufId = res.body.body._id;\n});",
                  "err": {},
                  "uuid": "b81f08f7-efcc-4ac7-a2ba-6bb7fb2b0c7f",
                  "parentUUID": "adac8ae4-0289-4a4f-8abf-ff76a00b28b3",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Task\"",
                  "fullTitle": "Start Database /Task \"after all\" hook in \"/Task\"",
                  "timedOut": false,
                  "duration": 3,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});\nawait Task.deleteMany({});",
                  "err": {},
                  "uuid": "2f09a281-8acb-4e5a-9a24-7b46a5134e6f",
                  "parentUUID": "adac8ae4-0289-4a4f-8abf-ff76a00b28b3",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create Task",
                  "fullTitle": "Start Database /Task [1]- Create Task",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task/create', token, task).then(function (res) {\n    expect(res.status).to.equal(201);\n    taskId = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "c02baadb-7076-47a9-8dd2-c8c42a8ed349",
                  "parentUUID": "adac8ae4-0289-4a4f-8abf-ff76a00b28b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Edit Task",
                  "fullTitle": "Start Database /Task [2]- Edit Task",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "task.name = \"Edited\";\nrequest.edit(`/task/${taskId}/edit`, token, task).then(function (res) {\n    expect(res.body.body.name).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "37eb175b-4410-4b48-959a-f0b42e16f9d7",
                  "parentUUID": "adac8ae4-0289-4a4f-8abf-ff76a00b28b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Get Task",
                  "fullTitle": "Start Database /Task [3]- Get Task",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/task/${taskId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "9b1f0fca-80a0-4017-9c83-7c1370dea822",
                  "parentUUID": "adac8ae4-0289-4a4f-8abf-ff76a00b28b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Create Invalid Schema Task",
                  "fullTitle": "Start Database /Task [4]- Create Invalid Schema Task",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task/create', token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "362c8247-9f49-459f-a547-916aaec03a00",
                  "parentUUID": "adac8ae4-0289-4a4f-8abf-ff76a00b28b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Update Invalid Schema Task",
                  "fullTitle": "Start Database /Task [5]- Update Invalid Schema Task",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/task/${taskId}/edit`, token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "93828146-4c77-4c0e-aa9a-6549513adb0d",
                  "parentUUID": "adac8ae4-0289-4a4f-8abf-ff76a00b28b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Create Invalid UfId Task",
                  "fullTitle": "Start Database /Task [6]- Create Invalid UfId Task",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let taskTemp = {\n    ufId: \"6259e3e95f71a80819cb020b\",\n    name: task.name,\n    description: task.description,\n    grade: task.grade,\n    dueDate: task.dueDate\n};\n\nrequest.edit(`/task/${taskId}/edit`, token, taskTemp).then(function (res) {\n    expect(res.status).to.equal(404);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "2babc610-23e9-4083-8f1e-55619500c7d0",
                  "parentUUID": "adac8ae4-0289-4a4f-8abf-ff76a00b28b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Delete Task",
                  "fullTitle": "Start Database /Task [6]- Delete Task",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/task/${taskId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "6b49149e-bef0-4c33-88e2-28c6c6c630c9",
                  "parentUUID": "adac8ae4-0289-4a4f-8abf-ff76a00b28b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Delete Non Existent Task",
                  "fullTitle": "Start Database /Task [7]- Delete Non Existent Task",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/task/${taskId}/delete`, token, {}).then(function (res) {\n    console.log(res.body);\n    expect(res.status).to.equal(500);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "466f68e0-cada-4865-8769-4f916982d56c",
                  "parentUUID": "adac8ae4-0289-4a4f-8abf-ff76a00b28b3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c02baadb-7076-47a9-8dd2-c8c42a8ed349",
                "37eb175b-4410-4b48-959a-f0b42e16f9d7",
                "9b1f0fca-80a0-4017-9c83-7c1370dea822",
                "362c8247-9f49-459f-a547-916aaec03a00",
                "93828146-4c77-4c0e-aa9a-6549513adb0d",
                "2babc610-23e9-4083-8f1e-55619500c7d0",
                "6b49149e-bef0-4c33-88e2-28c6c6c630c9",
                "466f68e0-cada-4865-8769-4f916982d56c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 51,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "40cd4b13-2a1e-4cb8-9e03-c2769061a628",
              "title": "/Truancy",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Truancy\"",
                  "fullTitle": "Start Database /Truancy \"before all\" hook in \"/Truancy\"",
                  "timedOut": false,
                  "duration": 28,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    moduleId = res.body.body._id;\n});\nawait request.post('/uf/create', token, {\n    moduleId: moduleId,\n    ...hooks.uf\n}).then(function (res) {\n    truancy.ufId = res.body.body._id;\n});",
                  "err": {},
                  "uuid": "e6edebff-789b-4e2a-9b2e-7587b0908a46",
                  "parentUUID": "40cd4b13-2a1e-4cb8-9e03-c2769061a628",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Truancy\"",
                  "fullTitle": "Start Database /Truancy \"after all\" hook in \"/Truancy\"",
                  "timedOut": false,
                  "duration": 3,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});\nawait Truancy.deleteMany({});",
                  "err": {},
                  "uuid": "21ffd407-1134-47b2-9bb4-e78246114262",
                  "parentUUID": "40cd4b13-2a1e-4cb8-9e03-c2769061a628",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create Truancy",
                  "fullTitle": "Start Database /Truancy [1]- Create Truancy",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/truancy/create', token, truancy).then(function (res) {\n    expect(res.status).to.equal(201);\n    truancyId = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "727bfcd3-270c-4d8f-9e96-7e2294e14e46",
                  "parentUUID": "40cd4b13-2a1e-4cb8-9e03-c2769061a628",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Create Truancy Unauthorized",
                  "fullTitle": "Start Database /Truancy [2]- Create Truancy Unauthorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/truancy/create', {}, truancy).then(function (res) {\n    expect(res.status).to.equal(401);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "7b943c17-21be-44cb-b885-2efe192c20d2",
                  "parentUUID": "40cd4b13-2a1e-4cb8-9e03-c2769061a628",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Update Truancy",
                  "fullTitle": "Start Database /Truancy [3]- Update Truancy",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "truancy.reason = \"Edited\";\nrequest.edit(`/truancy/${truancyId}/edit`, token, truancy).then(function (res) {\n    expect(res.body.body.reason).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "6b9475fe-e98f-4c79-984c-97147d21173a",
                  "parentUUID": "40cd4b13-2a1e-4cb8-9e03-c2769061a628",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Get Truancy",
                  "fullTitle": "Start Database /Truancy [4]- Get Truancy",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "truancy.reason = \"Edited\";\nrequest.get(`/truancy/${truancyId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "96f9c6dc-675e-4165-adb9-456b2b63293f",
                  "parentUUID": "40cd4b13-2a1e-4cb8-9e03-c2769061a628",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Update Invalid Schema Truancy",
                  "fullTitle": "Start Database /Truancy [5]- Update Invalid Schema Truancy",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/truancy/${truancyId}/edit`, token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "39f860be-04a4-4f94-9af2-fb58f0f51936",
                  "parentUUID": "40cd4b13-2a1e-4cb8-9e03-c2769061a628",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Delete Truancy",
                  "fullTitle": "Start Database /Truancy [6]- Delete Truancy",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/truancy/${truancyId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "120bbe30-6da9-4c07-9f1c-8e76faa3a874",
                  "parentUUID": "40cd4b13-2a1e-4cb8-9e03-c2769061a628",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Get Truancy After Delete",
                  "fullTitle": "Start Database /Truancy [7]- Get Truancy After Delete",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/truancy/${truancyId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(404);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "93d7dad9-2c9b-40e1-905e-4a18a6137753",
                  "parentUUID": "40cd4b13-2a1e-4cb8-9e03-c2769061a628",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "727bfcd3-270c-4d8f-9e96-7e2294e14e46",
                "7b943c17-21be-44cb-b885-2efe192c20d2",
                "6b9475fe-e98f-4c79-984c-97147d21173a",
                "96f9c6dc-675e-4165-adb9-456b2b63293f",
                "39f860be-04a4-4f94-9af2-fb58f0f51936",
                "120bbe30-6da9-4c07-9f1c-8e76faa3a874",
                "93d7dad9-2c9b-40e1-905e-4a18a6137753"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 31,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "46f8dbf7-d432-41d2-a0dd-d2e942492431",
              "title": "/Rule",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Rule\"",
                  "fullTitle": "Start Database /Rule \"before all\" hook in \"/Rule\"",
                  "timedOut": false,
                  "duration": 28,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    moduleId = res.body.body._id;\n});\nawait request.post('/uf/create', token, {\n    moduleId: moduleId,\n    ...hooks.uf\n}).then(function (res) {\n    rule.ufId = res.body.body._id;\n});",
                  "err": {},
                  "uuid": "be07a0ad-1788-46af-a61e-aa65d22385df",
                  "parentUUID": "46f8dbf7-d432-41d2-a0dd-d2e942492431",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Rule\"",
                  "fullTitle": "Start Database /Rule \"after all\" hook in \"/Rule\"",
                  "timedOut": false,
                  "duration": 3,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});\nawait Rule.deleteMany({});",
                  "err": {},
                  "uuid": "b17a1834-e7ca-4b43-85f5-54afb9f74612",
                  "parentUUID": "46f8dbf7-d432-41d2-a0dd-d2e942492431",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create Rule",
                  "fullTitle": "Start Database /Rule [1]- Create Rule",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/rule/create', token, rule).then(function (res) {\n    expect(res.status).to.equal(201);\n    ruleId = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "c26d0c08-a896-4c6b-a89e-c3b6036c07b3",
                  "parentUUID": "46f8dbf7-d432-41d2-a0dd-d2e942492431",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Create Rule Unauthorized",
                  "fullTitle": "Start Database /Rule [2]- Create Rule Unauthorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/rule/create', {}, rule).then(function (res) {\n    expect(res.status).to.equal(401);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "f9ff4e62-c980-42f7-9da0-a0707845ed7c",
                  "parentUUID": "46f8dbf7-d432-41d2-a0dd-d2e942492431",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Update Rule",
                  "fullTitle": "Start Database /Rule [3]- Update Rule",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "rule.title = \"Edited\";\nrequest.edit(`/rule/${ruleId}/edit`, token, rule).then(function (res) {\n    expect(res.body.body.title).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "7c49e904-0ea7-4c16-b0b6-19deda4599e8",
                  "parentUUID": "46f8dbf7-d432-41d2-a0dd-d2e942492431",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Get Rule",
                  "fullTitle": "Start Database /Rule [4]- Get Rule",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/rule/${ruleId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "535a9273-31aa-4c62-946b-14ef1b1b98f1",
                  "parentUUID": "46f8dbf7-d432-41d2-a0dd-d2e942492431",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Get Rules from UF",
                  "fullTitle": "Start Database /Rule [5]- Get Rules from UF",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/rule/uf/${rule.ufId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "b3c88c68-936d-47ed-acac-63deb85473ec",
                  "parentUUID": "46f8dbf7-d432-41d2-a0dd-d2e942492431",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Update Invalid Schema Rule",
                  "fullTitle": "Start Database /Rule [5]- Update Invalid Schema Rule",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/rule/${ruleId}/edit`, token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "b7423e8a-1152-4dc1-ad19-a8da775ff37c",
                  "parentUUID": "46f8dbf7-d432-41d2-a0dd-d2e942492431",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Delete Rule",
                  "fullTitle": "Start Database /Rule [6]- Delete Rule",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/rule/${ruleId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "b9fdf10b-db37-4634-87ba-0ea7f400de9b",
                  "parentUUID": "46f8dbf7-d432-41d2-a0dd-d2e942492431",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Get Rule After Delete",
                  "fullTitle": "Start Database /Rule [7]- Get Rule After Delete",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/rule/${ruleId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(404);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "66391545-b543-4e9b-8471-d203a423832a",
                  "parentUUID": "46f8dbf7-d432-41d2-a0dd-d2e942492431",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c26d0c08-a896-4c6b-a89e-c3b6036c07b3",
                "f9ff4e62-c980-42f7-9da0-a0707845ed7c",
                "7c49e904-0ea7-4c16-b0b6-19deda4599e8",
                "535a9273-31aa-4c62-946b-14ef1b1b98f1",
                "b3c88c68-936d-47ed-acac-63deb85473ec",
                "b7423e8a-1152-4dc1-ad19-a8da775ff37c",
                "b9fdf10b-db37-4634-87ba-0ea7f400de9b",
                "66391545-b543-4e9b-8471-d203a423832a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 50,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}