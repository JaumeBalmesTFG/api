{
  "stats": {
    "suites": 8,
    "tests": 42,
    "passes": 36,
    "pending": 0,
    "failures": 6,
    "start": "2022-04-24T20:26:40.007Z",
    "end": "2022-04-24T20:26:42.692Z",
    "duration": 2685,
    "testsRegistered": 49,
    "passPercent": 73.46938775510205,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 7,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "eee71122-8999-47f8-a00b-2a122b9bf093",
      "title": "",
      "fullFile": "/home/school/api/test/test.js",
      "file": "/test/test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f50bbe56-4cee-48ba-9606-7f366aa10ff0",
          "title": "API",
          "fullFile": "/home/school/api/test/test.js",
          "file": "/test/test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"API\"",
              "fullTitle": "API \"before all\" hook in \"API\"",
              "timedOut": false,
              "duration": 44,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mongoose.connect(URI_TEST, done)",
              "err": {},
              "uuid": "f5a99727-615f-407b-9ed6-7d3f08a0e3dd",
              "parentUUID": "f50bbe56-4cee-48ba-9606-7f366aa10ff0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f36e6320-f425-4dc5-808c-303ed46779ec",
              "title": "/Register",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"/Register\"",
                  "fullTitle": "API /Register \"before each\" hook in \"/Register\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});",
                  "err": {},
                  "uuid": "766c1550-571d-4930-be58-392de9511c29",
                  "parentUUID": "f36e6320-f425-4dc5-808c-303ed46779ec",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "[1]- Register",
                  "fullTitle": "API /Register [1]- Register",
                  "timedOut": false,
                  "duration": 75,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', hooks.user).then(function(res){\n    expect(res.status).to.equal(201);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "c04cd42f-841a-466e-828f-fec7077b7542",
                  "parentUUID": "f36e6320-f425-4dc5-808c-303ed46779ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Invalid Schema",
                  "fullTitle": "API /Register [2]- Invalid Schema",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "a0a040fa-0ca4-4b60-b1b4-35f2b708c3f4",
                  "parentUUID": "f36e6320-f425-4dc5-808c-303ed46779ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Invalid Password Pattern",
                  "fullTitle": "API /Register [3]- Invalid Password Pattern",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: hooks.user.firstName,\n    lastName: hooks.user.lastName,\n    email: hooks.user.email,\n    password: \"abcdef1\"\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "d41c6124-fa3c-4ba4-8e6d-fee0a3c735ad",
                  "parentUUID": "f36e6320-f425-4dc5-808c-303ed46779ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Invalid Email Pattern",
                  "fullTitle": "API /Register [4]- Invalid Email Pattern",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: hooks.user.firstName,\n    lastName: hooks.user.lastName,\n    email: 'abcdef',\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "b7b13f64-ab2c-4f7d-ab6f-3a554c113306",
                  "parentUUID": "f36e6320-f425-4dc5-808c-303ed46779ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Invalid First Name Pattern",
                  "fullTitle": "API /Register [4]- Invalid First Name Pattern",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: \"abc123\",\n    lastName: hooks.user.lastName,\n    email: hooks.user.email,\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "87b6f1dd-b6f5-4aab-8bdf-7368a8f09837",
                  "parentUUID": "f36e6320-f425-4dc5-808c-303ed46779ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Invalid Last Name Pattern",
                  "fullTitle": "API /Register [5]- Invalid Last Name Pattern",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: hooks.user.firstName,\n    lastName: \"abc123\",\n    email: hooks.user.email,\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "a41426e2-d374-4617-ba26-21d9f2f77fb1",
                  "parentUUID": "f36e6320-f425-4dc5-808c-303ed46779ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c04cd42f-841a-466e-828f-fec7077b7542",
                "a0a040fa-0ca4-4b60-b1b4-35f2b708c3f4",
                "d41c6124-fa3c-4ba4-8e6d-fee0a3c735ad",
                "b7b13f64-ab2c-4f7d-ab6f-3a554c113306",
                "87b6f1dd-b6f5-4aab-8bdf-7368a8f09837",
                "a41426e2-d374-4617-ba26-21d9f2f77fb1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 91,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5e320e18-f2a5-4d9c-b0c9-e2b099bcd800",
              "title": "/Login",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Login\"",
                  "fullTitle": "API /Login \"before all\" hook in \"/Login\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', hooks.user).then();",
                  "err": {},
                  "uuid": "0c950fd0-3d12-43ce-9692-2e24f080bfb3",
                  "parentUUID": "5e320e18-f2a5-4d9c-b0c9-e2b099bcd800",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Login\"",
                  "fullTitle": "API /Login \"after all\" hook in \"/Login\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});",
                  "err": {},
                  "uuid": "357200a4-de59-4f21-b521-f4cb99aaa48c",
                  "parentUUID": "5e320e18-f2a5-4d9c-b0c9-e2b099bcd800",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Login",
                  "fullTitle": "API /Login [1]- Login",
                  "timedOut": false,
                  "duration": 39,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {\n    email: hooks.user.email,\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(202);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "834b4f10-4ad5-479b-a016-358dbe2d8208",
                  "parentUUID": "5e320e18-f2a5-4d9c-b0c9-e2b099bcd800",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Empty Schema",
                  "fullTitle": "API /Login [2]- Empty Schema",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "04abdbea-0f4f-49ea-b9f5-6dccfd09d624",
                  "parentUUID": "5e320e18-f2a5-4d9c-b0c9-e2b099bcd800",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Invalid Login",
                  "fullTitle": "API /Login [3]- Invalid Login",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {\n    email: '123@123.com',\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(409);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "8884bf0f-4e16-4b20-863f-794a5f2419ad",
                  "parentUUID": "5e320e18-f2a5-4d9c-b0c9-e2b099bcd800",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Invalid Fields",
                  "fullTitle": "API /Login [4]- Invalid Fields",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {\n    firstName: hooks.user.firstName,\n    email: hooks.user.email,\n    password: hooks.user.password,\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "fc2ea5dc-fad3-424b-87d7-a17581017427",
                  "parentUUID": "5e320e18-f2a5-4d9c-b0c9-e2b099bcd800",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "834b4f10-4ad5-479b-a016-358dbe2d8208",
                "04abdbea-0f4f-49ea-b9f5-6dccfd09d624",
                "8884bf0f-4e16-4b20-863f-794a5f2419ad",
                "fc2ea5dc-fad3-424b-87d7-a17581017427"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 49,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e2663671-6acb-4494-97a3-7987a924d314",
              "title": "/Module",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Module\"",
                  "fullTitle": "API /Module \"before all\" hook in \"/Module\"",
                  "timedOut": false,
                  "duration": 25,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function(res){\n    token = res.body.token;\n});",
                  "err": {},
                  "uuid": "87c66536-0636-47a3-9d33-ef8d1aaaf782",
                  "parentUUID": "e2663671-6acb-4494-97a3-7987a924d314",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "[1]- Create Module",
                  "fullTitle": "API /Module [1]- Create Module",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/module', token, hooks.module).then(function(res){\n    expect(res.status).to.equal(201);\n    module_id = res.body.body._id;\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "810b6ea5-a63e-433f-84c3-ce6ad9103771",
                  "parentUUID": "e2663671-6acb-4494-97a3-7987a924d314",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Create Module Unauthorized",
                  "fullTitle": "API /Module [2]- Create Module Unauthorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/module', token + \"00\", hooks.module).then(function(res){\n    expect(res.status).to.equal(401);\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "394d71c4-efcf-4e08-a3a9-bff527e1b2e6",
                  "parentUUID": "e2663671-6acb-4494-97a3-7987a924d314",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Invalid Schema",
                  "fullTitle": "API /Module [3]- Invalid Schema",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/module', token, {}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "aec87a11-e838-43d1-a94a-9aa4a95cd7f8",
                  "parentUUID": "e2663671-6acb-4494-97a3-7987a924d314",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Archive Module",
                  "fullTitle": "API /Module [4]- Archive Module",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/module/${module_id}/archive`, token, { archived: true }).then(function(res){\n    expect(res.body.body.archived).to.equal(true);\n    expect(res.status).to.equal(200);\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "1da9c3e2-12cc-493a-af6b-789b35c3b83b",
                  "parentUUID": "e2663671-6acb-4494-97a3-7987a924d314",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Get Module",
                  "fullTitle": "API /Module [4]- Get Module",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/module/${module_id}`, token).then(function(res){\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "560cb296-683d-4241-a1d4-2f276ed015e7",
                  "parentUUID": "e2663671-6acb-4494-97a3-7987a924d314",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Update Module",
                  "fullTitle": "API /Module [5]- Update Module",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/module/${module_id}`, token, {\n    name: \"Edited\",\n    color: hooks.module.color\n}).then(function(res){\n    expect(res.body.body.name).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "ed402243-cc31-4771-851d-5d6580852b0b",
                  "parentUUID": "e2663671-6acb-4494-97a3-7987a924d314",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Invalid Update Module",
                  "fullTitle": "API /Module [6]- Invalid Update Module",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/module/${module_id}`, token, {\n    name: \"\",\n    color: hooks.module.color\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "ab9bd9ba-75d1-414c-9b13-03caa96451ea",
                  "parentUUID": "e2663671-6acb-4494-97a3-7987a924d314",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[8]- Get Archived Modules",
                  "fullTitle": "API /Module [8]- Get Archived Modules",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/module/all/archived`, token).then(function(res){\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "8c3460cf-76b8-476c-b519-d0d24ff056a2",
                  "parentUUID": "e2663671-6acb-4494-97a3-7987a924d314",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[9]- Get UFs From Modules",
                  "fullTitle": "API /Module [9]- Get UFs From Modules",
                  "timedOut": false,
                  "duration": 7,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/module/all/ufs`, token).then(function(res){\n    expect(res.status).to.equal(200);\n    expect(res.body.body[0]._id).to.equal(uf.moduleId);\n    expect(res.body.body[0].ufs[0]._id).to.equal(uf_id);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {
                    "message": "AssertionError: expected 404 to equal 200",
                    "estack": "AssertionError: expected 404 to equal 200\n    at /home/school/api/test/module.test.js:115:35\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                    "diff": "- 404\n+ 200\n"
                  },
                  "uuid": "487a3384-4e6c-4625-8456-ddf2e77153c4",
                  "parentUUID": "e2663671-6acb-4494-97a3-7987a924d314",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "810b6ea5-a63e-433f-84c3-ce6ad9103771",
                "394d71c4-efcf-4e08-a3a9-bff527e1b2e6",
                "aec87a11-e838-43d1-a94a-9aa4a95cd7f8",
                "1da9c3e2-12cc-493a-af6b-789b35c3b83b",
                "560cb296-683d-4241-a1d4-2f276ed015e7",
                "ed402243-cc31-4771-851d-5d6580852b0b",
                "ab9bd9ba-75d1-414c-9b13-03caa96451ea",
                "8c3460cf-76b8-476c-b519-d0d24ff056a2"
              ],
              "failures": [
                "487a3384-4e6c-4625-8456-ddf2e77153c4"
              ],
              "pending": [],
              "skipped": [],
              "duration": 76,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fc2af04a-8abd-483b-990a-20ff2e53533e",
              "title": "/Uf",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook for \"[1]- Create UF\"",
                  "fullTitle": "API /Uf \"before all\" hook for \"[1]- Create UF\"",
                  "timedOut": true,
                  "duration": 2002,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    uf.moduleId = res.body.body._id;\n});",
                  "err": {
                    "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/school/api/test/test.js)",
                    "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/school/api/test/test.js)\n    at listOnTimeout (internal/timers.js:554:17)\n    at processTimers (internal/timers.js:497:7)",
                    "diff": null
                  },
                  "uuid": "04f50a0e-d326-4cbb-b54e-8cb326fe17ca",
                  "parentUUID": "fc2af04a-8abd-483b-990a-20ff2e53533e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Uf\"",
                  "fullTitle": "API /Uf \"after all\" hook in \"/Uf\"",
                  "timedOut": false,
                  "duration": 6,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});",
                  "err": {},
                  "uuid": "b9ac262d-d35a-4a5d-a3b0-c579910f4620",
                  "parentUUID": "fc2af04a-8abd-483b-990a-20ff2e53533e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create UF",
                  "fullTitle": "API /Uf [1]- Create UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/uf/create', token, uf).then(function (res) {\n    expect(res.status).to.equal(201);\n    uf_id = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "5db77eea-9f49-408d-b1ac-a66e1c9cf950",
                  "parentUUID": "fc2af04a-8abd-483b-990a-20ff2e53533e",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[2]- Create UF Unauthorized",
                  "fullTitle": "API /Uf [2]- Create UF Unauthorized",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/uf/create', {}, uf).then(function (res) {\n    expect(res.status).to.equal(401);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "01e9c058-432a-47aa-a657-e3c38c52b40f",
                  "parentUUID": "fc2af04a-8abd-483b-990a-20ff2e53533e",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[3]- Invalid UF Schema ",
                  "fullTitle": "API /Uf [3]- Invalid UF Schema ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/uf/create', token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "99db83d3-7591-458d-8e2e-0deef89f692b",
                  "parentUUID": "fc2af04a-8abd-483b-990a-20ff2e53533e",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[4]- Update UF",
                  "fullTitle": "API /Uf [4]- Update UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uf.name = \"Edited\"\nrequest.edit(`/uf/${uf_id}/edit`, token, uf).then(function (res) {\n    expect(res.body.body.name).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "372205e5-0774-46b2-b21b-5783d7bf23ec",
                  "parentUUID": "fc2af04a-8abd-483b-990a-20ff2e53533e",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[5]- Get UF",
                  "fullTitle": "API /Uf [5]- Get UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/uf/${uf_id}`, token, uf).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "aeec0504-f98c-4ce9-affe-48e856654c99",
                  "parentUUID": "fc2af04a-8abd-483b-990a-20ff2e53533e",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[6]- Get Invalid UF",
                  "fullTitle": "API /Uf [6]- Get Invalid UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/uf/${uf_id + \"0\"}`, token, uf).then(function (res) {\n    expect(res.status).to.equal(404);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "09b580d6-c246-44a8-9239-8a92cc5cee8c",
                  "parentUUID": "fc2af04a-8abd-483b-990a-20ff2e53533e",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[7]- Create UF - Invalid Module",
                  "fullTitle": "API /Uf [7]- Create UF - Invalid Module",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uf.moduleId = \"62575d1ddc2246861a6998e9\";\nrequest.post('/uf/create', token, uf).then(function (res) {\n    expect(res.status).to.equal(401);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "d43c18aa-89df-41e9-a1c0-2f8a8d074981",
                  "parentUUID": "fc2af04a-8abd-483b-990a-20ff2e53533e",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "5db77eea-9f49-408d-b1ac-a66e1c9cf950",
                "01e9c058-432a-47aa-a657-e3c38c52b40f",
                "99db83d3-7591-458d-8e2e-0deef89f692b",
                "372205e5-0774-46b2-b21b-5783d7bf23ec",
                "aeec0504-f98c-4ce9-affe-48e856654c99",
                "09b580d6-c246-44a8-9239-8a92cc5cee8c",
                "d43c18aa-89df-41e9-a1c0-2f8a8d074981"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9b0234eb-c853-4eaf-89d9-fb3c2e62c719",
              "title": "/Task",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Task\"",
                  "fullTitle": "API /Task \"before all\" hook in \"/Task\"",
                  "timedOut": false,
                  "duration": 83,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    uf.moduleId = res.body.body._id;\n});\nawait request.post('/uf/create', token, uf).then(function(res){\n    task.ufId = res.body.body._id;\n});",
                  "err": {},
                  "uuid": "a47a3de1-89c4-42c2-af5b-e1104b2d382f",
                  "parentUUID": "9b0234eb-c853-4eaf-89d9-fb3c2e62c719",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Task\"",
                  "fullTitle": "API /Task \"after all\" hook in \"/Task\"",
                  "timedOut": false,
                  "duration": 4,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});\nawait Task.deleteMany({});",
                  "err": {},
                  "uuid": "9a8e9ae9-86b3-4bf4-b23a-9cff022ecbc2",
                  "parentUUID": "9b0234eb-c853-4eaf-89d9-fb3c2e62c719",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create Task",
                  "fullTitle": "API /Task [1]- Create Task",
                  "timedOut": false,
                  "duration": 5,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task/create', token, task).then(function (res) {\n    expect(res.status).to.equal(201);\n    taskId = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {
                    "message": "AssertionError: expected 406 to equal 201",
                    "estack": "AssertionError: expected 406 to equal 201\n    at /home/school/api/test/task.test.js:47:35\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                    "diff": "- 406\n+ 201\n"
                  },
                  "uuid": "df6def8d-3d9d-4af1-bfdd-9b80caff62b6",
                  "parentUUID": "9b0234eb-c853-4eaf-89d9-fb3c2e62c719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Edit Task",
                  "fullTitle": "API /Task [2]- Edit Task",
                  "timedOut": false,
                  "duration": 5,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "task.name = \"Edited\";\nrequest.edit(`/task/${taskId}/edit`, token, task).then(function (res) {\n    expect(res.body.body.name).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {
                    "message": "AssertionError: expected 406 to equal 200",
                    "estack": "AssertionError: expected 406 to equal 200\n    at /home/school/api/test/task.test.js:57:35\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                    "diff": "- 406\n+ 200\n"
                  },
                  "uuid": "e235d2fe-a7bb-4223-a756-43afd000d2ea",
                  "parentUUID": "9b0234eb-c853-4eaf-89d9-fb3c2e62c719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Get Task",
                  "fullTitle": "API /Task [3]- Get Task",
                  "timedOut": false,
                  "duration": 6,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/task/${taskId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {
                    "message": "AssertionError: expected 500 to equal 200",
                    "estack": "AssertionError: expected 500 to equal 200\n    at /home/school/api/test/task.test.js:65:35\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                    "diff": "- 500\n+ 200\n"
                  },
                  "uuid": "7bcab4b2-36f0-4b7a-a90f-44919c653998",
                  "parentUUID": "9b0234eb-c853-4eaf-89d9-fb3c2e62c719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Create Invalid Schema Task",
                  "fullTitle": "API /Task [4]- Create Invalid Schema Task",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task/create', token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "e633d9ce-8cb3-4dbb-a998-00e88ed774e5",
                  "parentUUID": "9b0234eb-c853-4eaf-89d9-fb3c2e62c719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Update Invalid Schema Task",
                  "fullTitle": "API /Task [5]- Update Invalid Schema Task",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/task/${taskId}/edit`, token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "bfec8657-e3f6-4d97-8c58-b25885319a6b",
                  "parentUUID": "9b0234eb-c853-4eaf-89d9-fb3c2e62c719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Create Invalid UfId Task",
                  "fullTitle": "API /Task [6]- Create Invalid UfId Task",
                  "timedOut": false,
                  "duration": 5,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let taskTemp = {\n    ufId: \"6259e3e95f71a80819cb020b\",\n    name: task.name,\n    description: task.description,\n    grade: task.grade,\n    dueDate: task.dueDate\n};\n\nrequest.edit(`/task/${taskId}/edit`, token, taskTemp).then(function (res) {\n    expect(res.status).to.equal(404);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {
                    "message": "AssertionError: expected 406 to equal 404",
                    "estack": "AssertionError: expected 406 to equal 404\n    at /home/school/api/test/task.test.js:95:35\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                    "diff": "- 406\n+ 404\n"
                  },
                  "uuid": "02ec30c7-d4c2-4f37-a435-c6e7a6668963",
                  "parentUUID": "9b0234eb-c853-4eaf-89d9-fb3c2e62c719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Delete Task",
                  "fullTitle": "API /Task [6]- Delete Task",
                  "timedOut": false,
                  "duration": 5,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/task/${taskId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {
                    "message": "AssertionError: expected 500 to equal 200",
                    "estack": "AssertionError: expected 500 to equal 200\n    at /home/school/api/test/task.test.js:102:35\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                    "diff": "- 500\n+ 200\n"
                  },
                  "uuid": "abdc1996-ad89-4eb0-b75a-fd8d7e68fcfa",
                  "parentUUID": "9b0234eb-c853-4eaf-89d9-fb3c2e62c719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Delete Non Existent Task",
                  "fullTitle": "API /Task [7]- Delete Non Existent Task",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/task/${taskId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(500);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "33f7f00c-d6bc-48b0-9bf8-c895ac444e8c",
                  "parentUUID": "9b0234eb-c853-4eaf-89d9-fb3c2e62c719",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e633d9ce-8cb3-4dbb-a998-00e88ed774e5",
                "bfec8657-e3f6-4d97-8c58-b25885319a6b",
                "33f7f00c-d6bc-48b0-9bf8-c895ac444e8c"
              ],
              "failures": [
                "df6def8d-3d9d-4af1-bfdd-9b80caff62b6",
                "e235d2fe-a7bb-4223-a756-43afd000d2ea",
                "7bcab4b2-36f0-4b7a-a90f-44919c653998",
                "02ec30c7-d4c2-4f37-a435-c6e7a6668963",
                "abdc1996-ad89-4eb0-b75a-fd8d7e68fcfa"
              ],
              "pending": [],
              "skipped": [],
              "duration": 41,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "217d75af-fd55-40c1-932e-6f89a1c9d418",
              "title": "/Truancy",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Truancy\"",
                  "fullTitle": "API /Truancy \"before all\" hook in \"/Truancy\"",
                  "timedOut": false,
                  "duration": 43,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    moduleId = res.body.body._id;\n});\nawait request.post('/uf/create', token, {\n    moduleId: moduleId,\n    ...hooks.uf\n}).then(function (res) {\n    truancy.ufId = res.body.body._id;\n});",
                  "err": {},
                  "uuid": "f97c18bf-e86d-4a95-90b0-816ae8aa9d42",
                  "parentUUID": "217d75af-fd55-40c1-932e-6f89a1c9d418",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Truancy\"",
                  "fullTitle": "API /Truancy \"after all\" hook in \"/Truancy\"",
                  "timedOut": false,
                  "duration": 4,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});\nawait Truancy.deleteMany({});",
                  "err": {},
                  "uuid": "51e1b014-3040-449f-b6eb-28cd509dba58",
                  "parentUUID": "217d75af-fd55-40c1-932e-6f89a1c9d418",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create Truancy",
                  "fullTitle": "API /Truancy [1]- Create Truancy",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/truancy/create', token, truancy).then(function (res) {\n    expect(res.status).to.equal(201);\n    truancyId = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "361865d0-8336-4fcc-9d44-0171f46c8fdf",
                  "parentUUID": "217d75af-fd55-40c1-932e-6f89a1c9d418",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Create Truancy Unauthorized",
                  "fullTitle": "API /Truancy [2]- Create Truancy Unauthorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/truancy/create', {}, truancy).then(function (res) {\n    expect(res.status).to.equal(401);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "fa0a0bd5-0361-439a-967d-f26285a24dbb",
                  "parentUUID": "217d75af-fd55-40c1-932e-6f89a1c9d418",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Update Truancy",
                  "fullTitle": "API /Truancy [3]- Update Truancy",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "truancy.reason = \"Edited\";\nrequest.edit(`/truancy/${truancyId}/edit`, token, truancy).then(function (res) {\n    expect(res.body.body.reason).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "bac6f6ab-af9b-45e8-8076-9ce0c27c7302",
                  "parentUUID": "217d75af-fd55-40c1-932e-6f89a1c9d418",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Get Truancy",
                  "fullTitle": "API /Truancy [4]- Get Truancy",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "truancy.reason = \"Edited\";\nrequest.get(`/truancy/${truancyId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "abe38c5f-d5f0-4fcf-924b-255d27d0c4c4",
                  "parentUUID": "217d75af-fd55-40c1-932e-6f89a1c9d418",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Update Invalid Schema Truancy",
                  "fullTitle": "API /Truancy [5]- Update Invalid Schema Truancy",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/truancy/${truancyId}/edit`, token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "5e586306-655c-4e0f-9254-4a1053efb532",
                  "parentUUID": "217d75af-fd55-40c1-932e-6f89a1c9d418",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Delete Truancy",
                  "fullTitle": "API /Truancy [6]- Delete Truancy",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/truancy/${truancyId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "d1bcede4-1f2a-4a9e-a12e-d8d5e6cf7f20",
                  "parentUUID": "217d75af-fd55-40c1-932e-6f89a1c9d418",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Get Truancy After Delete",
                  "fullTitle": "API /Truancy [7]- Get Truancy After Delete",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/truancy/${truancyId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(404);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "c4c011c8-87f2-4a3f-b675-79d7377a9ea4",
                  "parentUUID": "217d75af-fd55-40c1-932e-6f89a1c9d418",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "361865d0-8336-4fcc-9d44-0171f46c8fdf",
                "fa0a0bd5-0361-439a-967d-f26285a24dbb",
                "bac6f6ab-af9b-45e8-8076-9ce0c27c7302",
                "abe38c5f-d5f0-4fcf-924b-255d27d0c4c4",
                "5e586306-655c-4e0f-9254-4a1053efb532",
                "d1bcede4-1f2a-4a9e-a12e-d8d5e6cf7f20",
                "c4c011c8-87f2-4a3f-b675-79d7377a9ea4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 48,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6ef24d8c-12c8-40d7-bb84-c2a8b36d0a2c",
              "title": "/Rule",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Rule\"",
                  "fullTitle": "API /Rule \"before all\" hook in \"/Rule\"",
                  "timedOut": false,
                  "duration": 41,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    moduleId = res.body.body._id;\n});\nawait request.post('/uf/create', token, {\n    moduleId: moduleId,\n    ...hooks.uf\n}).then(function (res) {\n    rule.ufId = res.body.body._id;\n});",
                  "err": {},
                  "uuid": "8e094368-256f-4944-b3cf-05116a7b7463",
                  "parentUUID": "6ef24d8c-12c8-40d7-bb84-c2a8b36d0a2c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Rule\"",
                  "fullTitle": "API /Rule \"after all\" hook in \"/Rule\"",
                  "timedOut": false,
                  "duration": 4,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});\nawait Rule.deleteMany({});",
                  "err": {},
                  "uuid": "a408c446-7c87-49b9-bca3-9162d9cc1e17",
                  "parentUUID": "6ef24d8c-12c8-40d7-bb84-c2a8b36d0a2c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create Rule",
                  "fullTitle": "API /Rule [1]- Create Rule",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/rule/create', token, rule).then(function (res) {\n    expect(res.status).to.equal(201);\n    ruleId = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "a45dcb9b-57a4-4508-a4a8-b2515ee90d65",
                  "parentUUID": "6ef24d8c-12c8-40d7-bb84-c2a8b36d0a2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Create Rule Unauthorized",
                  "fullTitle": "API /Rule [2]- Create Rule Unauthorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/rule/create', {}, rule).then(function (res) {\n    expect(res.status).to.equal(401);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "4d8d9cd9-10fe-4b95-9b01-8b403e2c480b",
                  "parentUUID": "6ef24d8c-12c8-40d7-bb84-c2a8b36d0a2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Update Rule",
                  "fullTitle": "API /Rule [3]- Update Rule",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "rule.title = \"Edited\";\nrequest.edit(`/rule/${ruleId}/edit`, token, rule).then(function (res) {\n    expect(res.body.body.title).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "4d45cf5c-d042-4327-a43a-79b46e91917a",
                  "parentUUID": "6ef24d8c-12c8-40d7-bb84-c2a8b36d0a2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Get Rule",
                  "fullTitle": "API /Rule [4]- Get Rule",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/rule/${ruleId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "2b6c867c-7f10-40d5-8b07-11fd0cc274ec",
                  "parentUUID": "6ef24d8c-12c8-40d7-bb84-c2a8b36d0a2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Get Rules from UF",
                  "fullTitle": "API /Rule [5]- Get Rules from UF",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/rule/uf/${rule.ufId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "133b3b74-86eb-4952-97bd-b80b5b42d689",
                  "parentUUID": "6ef24d8c-12c8-40d7-bb84-c2a8b36d0a2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Update Invalid Schema Rule",
                  "fullTitle": "API /Rule [5]- Update Invalid Schema Rule",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/rule/${ruleId}/edit`, token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "f9bfaf3a-7274-43b1-b3f0-0a6dc60d5251",
                  "parentUUID": "6ef24d8c-12c8-40d7-bb84-c2a8b36d0a2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Delete Rule",
                  "fullTitle": "API /Rule [6]- Delete Rule",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/rule/${ruleId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "d500878e-5ab5-4e0f-a3ec-457d4c0b8eeb",
                  "parentUUID": "6ef24d8c-12c8-40d7-bb84-c2a8b36d0a2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Get Rule After Delete",
                  "fullTitle": "API /Rule [7]- Get Rule After Delete",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/rule/${ruleId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(404);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "b8174000-46e5-4b15-9eec-c287db8a59e0",
                  "parentUUID": "6ef24d8c-12c8-40d7-bb84-c2a8b36d0a2c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a45dcb9b-57a4-4508-a4a8-b2515ee90d65",
                "4d8d9cd9-10fe-4b95-9b01-8b403e2c480b",
                "4d45cf5c-d042-4327-a43a-79b46e91917a",
                "2b6c867c-7f10-40d5-8b07-11fd0cc274ec",
                "133b3b74-86eb-4952-97bd-b80b5b42d689",
                "f9bfaf3a-7274-43b1-b3f0-0a6dc60d5251",
                "d500878e-5ab5-4e0f-a3ec-457d4c0b8eeb",
                "b8174000-46e5-4b15-9eec-c287db8a59e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "public"
      },
      "version": "6.2.0"
    }
  }
}