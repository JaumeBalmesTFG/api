{
  "stats": {
    "suites": 8,
    "tests": 40,
    "passes": 40,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-23T02:29:59.510Z",
    "end": "2022-04-23T02:30:02.098Z",
    "duration": 2588,
    "testsRegistered": 47,
    "passPercent": 85.1063829787234,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 7,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "95189d01-bd0e-4ce9-96e8-04f3db67de1a",
      "title": "",
      "fullFile": "/home/school/api/test/test.js",
      "file": "/test/test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4053ac66-dfe7-4a4d-bcd4-73194b89b9fb",
          "title": "API",
          "fullFile": "/home/school/api/test/test.js",
          "file": "/test/test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"API\"",
              "fullTitle": "API \"before all\" hook in \"API\"",
              "timedOut": false,
              "duration": 32,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mongoose.connect(URI_TEST, done)",
              "err": {},
              "uuid": "c20832a2-7c54-48d6-a769-b24e8b17142d",
              "parentUUID": "4053ac66-dfe7-4a4d-bcd4-73194b89b9fb",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c3a36f8a-5c31-42ad-b93e-dd4a4ec118f1",
              "title": "/Register",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"/Register\"",
                  "fullTitle": "API /Register \"before each\" hook in \"/Register\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});",
                  "err": {},
                  "uuid": "45404b4d-aed7-4520-9d2d-2390fa85c0b3",
                  "parentUUID": "c3a36f8a-5c31-42ad-b93e-dd4a4ec118f1",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "[1]- Register",
                  "fullTitle": "API /Register [1]- Register",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', hooks.user).then(function(res){\n    expect(res.status).to.equal(201);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "b34ea0bb-86e1-4803-9950-3c6bde31a781",
                  "parentUUID": "c3a36f8a-5c31-42ad-b93e-dd4a4ec118f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Invalid Schema",
                  "fullTitle": "API /Register [2]- Invalid Schema",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "10a209c5-4528-4941-95da-02de4b06f5bd",
                  "parentUUID": "c3a36f8a-5c31-42ad-b93e-dd4a4ec118f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Invalid Password Pattern",
                  "fullTitle": "API /Register [3]- Invalid Password Pattern",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: hooks.user.firstName,\n    lastName: hooks.user.lastName,\n    email: hooks.user.email,\n    password: \"abcdef1\"\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "e3aeddf1-f803-4f33-930e-7e64885fa9a5",
                  "parentUUID": "c3a36f8a-5c31-42ad-b93e-dd4a4ec118f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Invalid Email Pattern",
                  "fullTitle": "API /Register [4]- Invalid Email Pattern",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: hooks.user.firstName,\n    lastName: hooks.user.lastName,\n    email: 'abcdef',\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "1017650d-7092-4f11-bca7-960db8286cce",
                  "parentUUID": "c3a36f8a-5c31-42ad-b93e-dd4a4ec118f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Invalid First Name Pattern",
                  "fullTitle": "API /Register [4]- Invalid First Name Pattern",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: \"abc123\",\n    lastName: hooks.user.lastName,\n    email: hooks.user.email,\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "5205b0d4-a622-4a67-9585-f1264531d961",
                  "parentUUID": "c3a36f8a-5c31-42ad-b93e-dd4a4ec118f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Invalid Last Name Pattern",
                  "fullTitle": "API /Register [5]- Invalid Last Name Pattern",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: hooks.user.firstName,\n    lastName: \"abc123\",\n    email: hooks.user.email,\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "c13af03a-991c-4dc6-8e7b-a0b70a972a49",
                  "parentUUID": "c3a36f8a-5c31-42ad-b93e-dd4a4ec118f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b34ea0bb-86e1-4803-9950-3c6bde31a781",
                "10a209c5-4528-4941-95da-02de4b06f5bd",
                "e3aeddf1-f803-4f33-930e-7e64885fa9a5",
                "1017650d-7092-4f11-bca7-960db8286cce",
                "5205b0d4-a622-4a67-9585-f1264531d961",
                "c13af03a-991c-4dc6-8e7b-a0b70a972a49"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 69,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "46c89859-ff84-407c-809f-0c79e31098c6",
              "title": "/Login",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Login\"",
                  "fullTitle": "API /Login \"before all\" hook in \"/Login\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', hooks.user).then();",
                  "err": {},
                  "uuid": "dc4907f2-f2d2-4b38-aeef-2503151f16b8",
                  "parentUUID": "46c89859-ff84-407c-809f-0c79e31098c6",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Login\"",
                  "fullTitle": "API /Login \"after all\" hook in \"/Login\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});",
                  "err": {},
                  "uuid": "2af152f6-576e-4537-b3f3-f477e97a7ebf",
                  "parentUUID": "46c89859-ff84-407c-809f-0c79e31098c6",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Login",
                  "fullTitle": "API /Login [1]- Login",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {\n    email: hooks.user.email,\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(202);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "d1cc53d5-3d2d-464f-bf7c-f9f23162161f",
                  "parentUUID": "46c89859-ff84-407c-809f-0c79e31098c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Empty Schema",
                  "fullTitle": "API /Login [2]- Empty Schema",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "9bd941c6-28d8-401a-a279-16333b1c8a7f",
                  "parentUUID": "46c89859-ff84-407c-809f-0c79e31098c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Invalid Login",
                  "fullTitle": "API /Login [3]- Invalid Login",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {\n    email: '123@123.com',\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(409);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "35553ab1-5ab7-4dc9-a01b-a030f3d405a7",
                  "parentUUID": "46c89859-ff84-407c-809f-0c79e31098c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Invalid Fields",
                  "fullTitle": "API /Login [4]- Invalid Fields",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {\n    firstName: hooks.user.firstName,\n    email: hooks.user.email,\n    password: hooks.user.password,\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "2f0e21f8-b744-4144-9bac-dfcc617386f0",
                  "parentUUID": "46c89859-ff84-407c-809f-0c79e31098c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d1cc53d5-3d2d-464f-bf7c-f9f23162161f",
                "9bd941c6-28d8-401a-a279-16333b1c8a7f",
                "35553ab1-5ab7-4dc9-a01b-a030f3d405a7",
                "2f0e21f8-b744-4144-9bac-dfcc617386f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 66,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "334663cf-5497-4fa7-8712-5262a166a1ee",
              "title": "/Module",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Module\"",
                  "fullTitle": "API /Module \"before all\" hook in \"/Module\"",
                  "timedOut": false,
                  "duration": 19,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function(res){\n    token = res.body.token;\n});",
                  "err": {},
                  "uuid": "04526268-1b79-4ba3-ba49-cdc59e6c5557",
                  "parentUUID": "334663cf-5497-4fa7-8712-5262a166a1ee",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "[1]- Create Module",
                  "fullTitle": "API /Module [1]- Create Module",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/module', token, hooks.module).then(function(res){\n    expect(res.status).to.equal(201);\n    module_id = res.body.body._id;\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "f5a75f9f-e7d2-4daa-b422-225d19207445",
                  "parentUUID": "334663cf-5497-4fa7-8712-5262a166a1ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Create Module Unauthorized",
                  "fullTitle": "API /Module [2]- Create Module Unauthorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/module', token + \"00\", hooks.module).then(function(res){\n    expect(res.status).to.equal(401);\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "d4111d42-1429-4c46-9ff5-5d1b725d1d95",
                  "parentUUID": "334663cf-5497-4fa7-8712-5262a166a1ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Invalid Schema",
                  "fullTitle": "API /Module [3]- Invalid Schema",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/module', token, {}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "1f0562c4-c3c0-4864-92b3-333c1d66175d",
                  "parentUUID": "334663cf-5497-4fa7-8712-5262a166a1ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Archive Module",
                  "fullTitle": "API /Module [4]- Archive Module",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/module/${module_id}/archive`, token, { archived: true }).then(function(res){\n    expect(res.body.body.archived).to.equal(true);\n    expect(res.status).to.equal(200);\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "10330e14-346f-469f-b0af-eb454b18e57e",
                  "parentUUID": "334663cf-5497-4fa7-8712-5262a166a1ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Get Module",
                  "fullTitle": "API /Module [5]- Get Module",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/module/${module_id}`, token).then(function(res){\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "a7802a04-4c32-473d-9e96-2eb524ef11db",
                  "parentUUID": "334663cf-5497-4fa7-8712-5262a166a1ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Update Module",
                  "fullTitle": "API /Module [6]- Update Module",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/module/${module_id}`, token, {\n    name: \"Edited\",\n    color: hooks.module.color\n}).then(function(res){\n    expect(res.body.body.name).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "3c6c801c-d0c3-4493-b224-35363c9ff538",
                  "parentUUID": "334663cf-5497-4fa7-8712-5262a166a1ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Invalid Update Module",
                  "fullTitle": "API /Module [7]- Invalid Update Module",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/module/${module_id}`, token, {\n    name: \"\",\n    color: hooks.module.color\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "2f3df5fa-42f3-475f-abfc-cd939e1d9977",
                  "parentUUID": "334663cf-5497-4fa7-8712-5262a166a1ee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f5a75f9f-e7d2-4daa-b422-225d19207445",
                "d4111d42-1429-4c46-9ff5-5d1b725d1d95",
                "1f0562c4-c3c0-4864-92b3-333c1d66175d",
                "10330e14-346f-469f-b0af-eb454b18e57e",
                "a7802a04-4c32-473d-9e96-2eb524ef11db",
                "3c6c801c-d0c3-4493-b224-35363c9ff538",
                "2f3df5fa-42f3-475f-abfc-cd939e1d9977"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 47,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fa5be5ba-1450-4dbf-bbe4-31f8f42a20f4",
              "title": "/Uf",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook for \"[1]- Create UF\"",
                  "fullTitle": "API /Uf \"before all\" hook for \"[1]- Create UF\"",
                  "timedOut": true,
                  "duration": 2009,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    uf.moduleId = res.body.body._id;\n});",
                  "err": {
                    "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/school/api/test/test.js)",
                    "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/school/api/test/test.js)\n    at listOnTimeout (internal/timers.js:554:17)\n    at processTimers (internal/timers.js:497:7)",
                    "diff": null
                  },
                  "uuid": "918b906a-0f5e-475d-89d9-ba56ce2a3914",
                  "parentUUID": "fa5be5ba-1450-4dbf-bbe4-31f8f42a20f4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Uf\"",
                  "fullTitle": "API /Uf \"after all\" hook in \"/Uf\"",
                  "timedOut": false,
                  "duration": 4,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});",
                  "err": {},
                  "uuid": "feff44d2-426f-448a-ab6d-da1238fbe3bc",
                  "parentUUID": "fa5be5ba-1450-4dbf-bbe4-31f8f42a20f4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create UF",
                  "fullTitle": "API /Uf [1]- Create UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/uf/create', token, uf).then(function (res) {\n    expect(res.status).to.equal(201);\n    uf_id = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "8f478e5a-ddea-49dc-a5ce-7c3d098d058f",
                  "parentUUID": "fa5be5ba-1450-4dbf-bbe4-31f8f42a20f4",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[2]- Create UF Unauthorized",
                  "fullTitle": "API /Uf [2]- Create UF Unauthorized",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/uf/create', {}, uf).then(function (res) {\n    expect(res.status).to.equal(401);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "0b979804-766d-4f43-b121-35acf5f05a99",
                  "parentUUID": "fa5be5ba-1450-4dbf-bbe4-31f8f42a20f4",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[3]- Invalid UF Schema ",
                  "fullTitle": "API /Uf [3]- Invalid UF Schema ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/uf/create', token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "0d53cc1a-1b9b-4a5b-bd0c-2bf635b9d05d",
                  "parentUUID": "fa5be5ba-1450-4dbf-bbe4-31f8f42a20f4",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[4]- Update UF",
                  "fullTitle": "API /Uf [4]- Update UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uf.name = \"Edited\"\nrequest.edit(`/uf/${uf_id}/edit`, token, uf).then(function (res) {\n    expect(res.body.body.name).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "6455b4f3-cef0-419d-997e-9ed322284598",
                  "parentUUID": "fa5be5ba-1450-4dbf-bbe4-31f8f42a20f4",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[5]- Get UF",
                  "fullTitle": "API /Uf [5]- Get UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/uf/${uf_id}`, token, uf).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "7f50889e-2069-4c15-bdc0-58a5d6a5e99e",
                  "parentUUID": "fa5be5ba-1450-4dbf-bbe4-31f8f42a20f4",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[6]- Get Invalid UF",
                  "fullTitle": "API /Uf [6]- Get Invalid UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/uf/${uf_id + \"0\"}`, token, uf).then(function (res) {\n    expect(res.status).to.equal(500);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "abe49968-b279-4cc4-84eb-a64c25acb0bd",
                  "parentUUID": "fa5be5ba-1450-4dbf-bbe4-31f8f42a20f4",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[7]- Create UF - Invalid Module",
                  "fullTitle": "API /Uf [7]- Create UF - Invalid Module",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uf.moduleId = \"62575d1ddc2246861a6998e9\";\nrequest.post('/uf/create', token, uf).then(function (res) {\n    expect(res.status).to.equal(500);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "912646f0-4ab6-41c8-8b00-d9828ee84e41",
                  "parentUUID": "fa5be5ba-1450-4dbf-bbe4-31f8f42a20f4",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "8f478e5a-ddea-49dc-a5ce-7c3d098d058f",
                "0b979804-766d-4f43-b121-35acf5f05a99",
                "0d53cc1a-1b9b-4a5b-bd0c-2bf635b9d05d",
                "6455b4f3-cef0-419d-997e-9ed322284598",
                "7f50889e-2069-4c15-bdc0-58a5d6a5e99e",
                "abe49968-b279-4cc4-84eb-a64c25acb0bd",
                "912646f0-4ab6-41c8-8b00-d9828ee84e41"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7d3d8a6e-652e-40f0-a61f-c45b9916c75d",
              "title": "/Task",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Task\"",
                  "fullTitle": "API /Task \"before all\" hook in \"/Task\"",
                  "timedOut": false,
                  "duration": 71,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    uf.moduleId = res.body.body._id;\n});\nawait request.post('/uf/create', token, uf).then(function(res){\n    task.ufId = res.body.body._id;\n});",
                  "err": {},
                  "uuid": "4317d893-16b0-4f64-8f7d-4004dddb24d2",
                  "parentUUID": "7d3d8a6e-652e-40f0-a61f-c45b9916c75d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Task\"",
                  "fullTitle": "API /Task \"after all\" hook in \"/Task\"",
                  "timedOut": false,
                  "duration": 6,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});\nawait Task.deleteMany({});",
                  "err": {},
                  "uuid": "6bed8d57-3464-43d6-a855-cf14dd48b96b",
                  "parentUUID": "7d3d8a6e-652e-40f0-a61f-c45b9916c75d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create Task",
                  "fullTitle": "API /Task [1]- Create Task",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task/create', token, task).then(function (res) {\n    expect(res.status).to.equal(201);\n    taskId = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "77a472e7-afcf-4775-823c-ce7dc3c8e404",
                  "parentUUID": "7d3d8a6e-652e-40f0-a61f-c45b9916c75d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Edit Task",
                  "fullTitle": "API /Task [2]- Edit Task",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "task.name = \"Edited\";\nrequest.edit(`/task/${taskId}/edit`, token, task).then(function (res) {\n    expect(res.body.body.name).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "552f800f-dd6c-4564-93c9-72e6bbff7053",
                  "parentUUID": "7d3d8a6e-652e-40f0-a61f-c45b9916c75d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Get Task",
                  "fullTitle": "API /Task [3]- Get Task",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/task/${taskId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "dd4c8f87-c9f4-4987-94c0-2fd2e34cb787",
                  "parentUUID": "7d3d8a6e-652e-40f0-a61f-c45b9916c75d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Create Invalid Schema Task",
                  "fullTitle": "API /Task [4]- Create Invalid Schema Task",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task/create', token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "af5e1a04-3423-4e4a-a443-e569ef5b490f",
                  "parentUUID": "7d3d8a6e-652e-40f0-a61f-c45b9916c75d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Update Invalid Schema Task",
                  "fullTitle": "API /Task [5]- Update Invalid Schema Task",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/task/${taskId}/edit`, token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "bbb51d68-6be4-4786-accc-cd5d3f25215e",
                  "parentUUID": "7d3d8a6e-652e-40f0-a61f-c45b9916c75d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Create Invalid UfId Task",
                  "fullTitle": "API /Task [6]- Create Invalid UfId Task",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let taskTemp = {\n    ufId: \"6259e3e95f71a80819cb020b\",\n    name: task.name,\n    description: task.description,\n    grade: task.grade,\n    dueDate: task.dueDate\n};\n\nrequest.edit(`/task/${taskId}/edit`, token, taskTemp).then(function (res) {\n    expect(res.status).to.equal(404);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "cd20a108-cdcd-4c66-ac69-3dcd47cc1b9d",
                  "parentUUID": "7d3d8a6e-652e-40f0-a61f-c45b9916c75d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Delete Task",
                  "fullTitle": "API /Task [6]- Delete Task",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/task/${taskId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "794788d3-4b47-4e31-9a2b-97eae3230516",
                  "parentUUID": "7d3d8a6e-652e-40f0-a61f-c45b9916c75d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Delete Non Existent Task",
                  "fullTitle": "API /Task [7]- Delete Non Existent Task",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/task/${taskId}/delete`, token, {}).then(function (res) {\n    console.log(res.body);\n    expect(res.status).to.equal(500);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "cd27d0fb-e97e-4a2a-ae41-ca9ba7e5bdf8",
                  "parentUUID": "7d3d8a6e-652e-40f0-a61f-c45b9916c75d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "77a472e7-afcf-4775-823c-ce7dc3c8e404",
                "552f800f-dd6c-4564-93c9-72e6bbff7053",
                "dd4c8f87-c9f4-4987-94c0-2fd2e34cb787",
                "af5e1a04-3423-4e4a-a443-e569ef5b490f",
                "bbb51d68-6be4-4786-accc-cd5d3f25215e",
                "cd20a108-cdcd-4c66-ac69-3dcd47cc1b9d",
                "794788d3-4b47-4e31-9a2b-97eae3230516",
                "cd27d0fb-e97e-4a2a-ae41-ca9ba7e5bdf8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 59,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a7be6e73-7b02-40e6-859b-5ad9f8cc36f7",
              "title": "/Truancy",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Truancy\"",
                  "fullTitle": "API /Truancy \"before all\" hook in \"/Truancy\"",
                  "timedOut": false,
                  "duration": 31,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    moduleId = res.body.body._id;\n});\nawait request.post('/uf/create', token, {\n    moduleId: moduleId,\n    ...hooks.uf\n}).then(function (res) {\n    truancy.ufId = res.body.body._id;\n});",
                  "err": {},
                  "uuid": "2f1711aa-549c-4039-9df9-ecbd47eb04b7",
                  "parentUUID": "a7be6e73-7b02-40e6-859b-5ad9f8cc36f7",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Truancy\"",
                  "fullTitle": "API /Truancy \"after all\" hook in \"/Truancy\"",
                  "timedOut": false,
                  "duration": 4,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});\nawait Truancy.deleteMany({});",
                  "err": {},
                  "uuid": "68e3ffaa-e0b5-4b57-887f-dd39d40994b4",
                  "parentUUID": "a7be6e73-7b02-40e6-859b-5ad9f8cc36f7",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create Truancy",
                  "fullTitle": "API /Truancy [1]- Create Truancy",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/truancy/create', token, truancy).then(function (res) {\n    expect(res.status).to.equal(201);\n    truancyId = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "09c5232f-b49b-4bdc-be68-fa4f0c58ec34",
                  "parentUUID": "a7be6e73-7b02-40e6-859b-5ad9f8cc36f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Create Truancy Unauthorized",
                  "fullTitle": "API /Truancy [2]- Create Truancy Unauthorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/truancy/create', {}, truancy).then(function (res) {\n    expect(res.status).to.equal(401);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "366b2f7f-bd74-4763-a557-6697769839fa",
                  "parentUUID": "a7be6e73-7b02-40e6-859b-5ad9f8cc36f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Update Truancy",
                  "fullTitle": "API /Truancy [3]- Update Truancy",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "truancy.reason = \"Edited\";\nrequest.edit(`/truancy/${truancyId}/edit`, token, truancy).then(function (res) {\n    expect(res.body.body.reason).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "9dbcaed1-e9d6-40c8-b080-da1e59b6752a",
                  "parentUUID": "a7be6e73-7b02-40e6-859b-5ad9f8cc36f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Get Truancy",
                  "fullTitle": "API /Truancy [4]- Get Truancy",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "truancy.reason = \"Edited\";\nrequest.get(`/truancy/${truancyId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "80aedd51-6ec5-46ae-8764-d6f96a351f2b",
                  "parentUUID": "a7be6e73-7b02-40e6-859b-5ad9f8cc36f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Update Invalid Schema Truancy",
                  "fullTitle": "API /Truancy [5]- Update Invalid Schema Truancy",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/truancy/${truancyId}/edit`, token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "390b620d-4cf1-483e-a411-2cca07ee412d",
                  "parentUUID": "a7be6e73-7b02-40e6-859b-5ad9f8cc36f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Delete Truancy",
                  "fullTitle": "API /Truancy [6]- Delete Truancy",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/truancy/${truancyId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "fdb916d9-6dc5-4fd3-a055-e4842e04508a",
                  "parentUUID": "a7be6e73-7b02-40e6-859b-5ad9f8cc36f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Get Truancy After Delete",
                  "fullTitle": "API /Truancy [7]- Get Truancy After Delete",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/truancy/${truancyId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(404);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "a6755e36-0df2-4873-b7b8-9750df50a707",
                  "parentUUID": "a7be6e73-7b02-40e6-859b-5ad9f8cc36f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "09c5232f-b49b-4bdc-be68-fa4f0c58ec34",
                "366b2f7f-bd74-4763-a557-6697769839fa",
                "9dbcaed1-e9d6-40c8-b080-da1e59b6752a",
                "80aedd51-6ec5-46ae-8764-d6f96a351f2b",
                "390b620d-4cf1-483e-a411-2cca07ee412d",
                "fdb916d9-6dc5-4fd3-a055-e4842e04508a",
                "a6755e36-0df2-4873-b7b8-9750df50a707"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 35,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4c2b1cef-f8fa-4fe2-bc5a-dd6c054e0786",
              "title": "/Rule",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Rule\"",
                  "fullTitle": "API /Rule \"before all\" hook in \"/Rule\"",
                  "timedOut": false,
                  "duration": 30,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    moduleId = res.body.body._id;\n});\nawait request.post('/uf/create', token, {\n    moduleId: moduleId,\n    ...hooks.uf\n}).then(function (res) {\n    rule.ufId = res.body.body._id;\n});",
                  "err": {},
                  "uuid": "1d8199eb-0d59-48e6-8f65-61257bad3ea1",
                  "parentUUID": "4c2b1cef-f8fa-4fe2-bc5a-dd6c054e0786",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Rule\"",
                  "fullTitle": "API /Rule \"after all\" hook in \"/Rule\"",
                  "timedOut": false,
                  "duration": 3,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});\nawait Rule.deleteMany({});",
                  "err": {},
                  "uuid": "5b6332e4-0231-4806-a115-b0b2a6a17328",
                  "parentUUID": "4c2b1cef-f8fa-4fe2-bc5a-dd6c054e0786",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create Rule",
                  "fullTitle": "API /Rule [1]- Create Rule",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/rule/create', token, rule).then(function (res) {\n    expect(res.status).to.equal(201);\n    ruleId = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "b3632025-b7a7-456f-876a-67e745d2a3fa",
                  "parentUUID": "4c2b1cef-f8fa-4fe2-bc5a-dd6c054e0786",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Create Rule Unauthorized",
                  "fullTitle": "API /Rule [2]- Create Rule Unauthorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/rule/create', {}, rule).then(function (res) {\n    expect(res.status).to.equal(401);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "02fb3149-14cc-4cfd-b600-81fb9dccd1ea",
                  "parentUUID": "4c2b1cef-f8fa-4fe2-bc5a-dd6c054e0786",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Update Rule",
                  "fullTitle": "API /Rule [3]- Update Rule",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "rule.title = \"Edited\";\nrequest.edit(`/rule/${ruleId}/edit`, token, rule).then(function (res) {\n    expect(res.body.body.title).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "ab3c91f7-f054-47a4-923c-d1a8cd202b82",
                  "parentUUID": "4c2b1cef-f8fa-4fe2-bc5a-dd6c054e0786",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Get Rule",
                  "fullTitle": "API /Rule [4]- Get Rule",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/rule/${ruleId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "7d3f1534-16c3-465f-89a3-433cb675e2ab",
                  "parentUUID": "4c2b1cef-f8fa-4fe2-bc5a-dd6c054e0786",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Get Rules from UF",
                  "fullTitle": "API /Rule [5]- Get Rules from UF",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/rule/uf/${rule.ufId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "f94d78a7-df05-4a3f-a3ee-eb713293df5a",
                  "parentUUID": "4c2b1cef-f8fa-4fe2-bc5a-dd6c054e0786",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Update Invalid Schema Rule",
                  "fullTitle": "API /Rule [5]- Update Invalid Schema Rule",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/rule/${ruleId}/edit`, token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "93106c9b-4374-4d9d-9750-8f27a2d957cc",
                  "parentUUID": "4c2b1cef-f8fa-4fe2-bc5a-dd6c054e0786",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Delete Rule",
                  "fullTitle": "API /Rule [6]- Delete Rule",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/rule/${ruleId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "9444f7d2-65de-45c2-a72e-d3de2f584bb3",
                  "parentUUID": "4c2b1cef-f8fa-4fe2-bc5a-dd6c054e0786",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Get Rule After Delete",
                  "fullTitle": "API /Rule [7]- Get Rule After Delete",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/rule/${ruleId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(404);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "5cfc95e2-61f9-408d-afa5-f96fc65ebdbd",
                  "parentUUID": "4c2b1cef-f8fa-4fe2-bc5a-dd6c054e0786",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b3632025-b7a7-456f-876a-67e745d2a3fa",
                "02fb3149-14cc-4cfd-b600-81fb9dccd1ea",
                "ab3c91f7-f054-47a4-923c-d1a8cd202b82",
                "7d3f1534-16c3-465f-89a3-433cb675e2ab",
                "f94d78a7-df05-4a3f-a3ee-eb713293df5a",
                "93106c9b-4374-4d9d-9750-8f27a2d957cc",
                "9444f7d2-65de-45c2-a72e-d3de2f584bb3",
                "5cfc95e2-61f9-408d-afa5-f96fc65ebdbd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 51,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "public"
      },
      "version": "6.2.0"
    }
  }
}