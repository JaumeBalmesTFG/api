{
  "stats": {
    "suites": 8,
    "tests": 40,
    "passes": 40,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-23T02:58:04.778Z",
    "end": "2022-04-23T02:58:07.327Z",
    "duration": 2549,
    "testsRegistered": 47,
    "passPercent": 85.1063829787234,
    "pendingPercent": 0,
    "other": 2,
    "hasOther": true,
    "skipped": 7,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "af08c67f-28e3-48e0-b6a9-b35e532f31b8",
      "title": "",
      "fullFile": "/home/school/api/test/test.js",
      "file": "/test/test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b00b1888-6727-4686-b74b-fc0bb2ae2036",
          "title": "API",
          "fullFile": "/home/school/api/test/test.js",
          "file": "/test/test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"API\"",
              "fullTitle": "API \"before all\" hook in \"API\"",
              "timedOut": false,
              "duration": 26,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mongoose.connect(URI_TEST, done)",
              "err": {},
              "uuid": "3b47de92-fb0d-41fe-8a76-04f0d0e3b89a",
              "parentUUID": "b00b1888-6727-4686-b74b-fc0bb2ae2036",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b50b1111-e70f-47bb-9a15-32eadd5e917f",
              "title": "/Register",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"/Register\"",
                  "fullTitle": "API /Register \"before each\" hook in \"/Register\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});",
                  "err": {},
                  "uuid": "f0661a8f-5754-4385-a3f8-1bbd697ff72f",
                  "parentUUID": "b50b1111-e70f-47bb-9a15-32eadd5e917f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "[1]- Register",
                  "fullTitle": "API /Register [1]- Register",
                  "timedOut": false,
                  "duration": 68,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', hooks.user).then(function(res){\n    expect(res.status).to.equal(201);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "0b0945b4-8db3-4a9a-9ba2-5bee648209fd",
                  "parentUUID": "b50b1111-e70f-47bb-9a15-32eadd5e917f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Invalid Schema",
                  "fullTitle": "API /Register [2]- Invalid Schema",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "2914ec36-dd3a-4c8b-aa1a-fa228d8cb390",
                  "parentUUID": "b50b1111-e70f-47bb-9a15-32eadd5e917f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Invalid Password Pattern",
                  "fullTitle": "API /Register [3]- Invalid Password Pattern",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: hooks.user.firstName,\n    lastName: hooks.user.lastName,\n    email: hooks.user.email,\n    password: \"abcdef1\"\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "e2f9af79-51bd-4c22-806d-7ce2a281479e",
                  "parentUUID": "b50b1111-e70f-47bb-9a15-32eadd5e917f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Invalid Email Pattern",
                  "fullTitle": "API /Register [4]- Invalid Email Pattern",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: hooks.user.firstName,\n    lastName: hooks.user.lastName,\n    email: 'abcdef',\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "fa0913c4-4298-4c17-b59b-9df989774a78",
                  "parentUUID": "b50b1111-e70f-47bb-9a15-32eadd5e917f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Invalid First Name Pattern",
                  "fullTitle": "API /Register [4]- Invalid First Name Pattern",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: \"abc123\",\n    lastName: hooks.user.lastName,\n    email: hooks.user.email,\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "637c20a5-7bdf-439d-b1fd-809e182d6294",
                  "parentUUID": "b50b1111-e70f-47bb-9a15-32eadd5e917f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Invalid Last Name Pattern",
                  "fullTitle": "API /Register [5]- Invalid Last Name Pattern",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', {\n    firstName: hooks.user.firstName,\n    lastName: \"abc123\",\n    email: hooks.user.email,\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "e3fbdcc9-4689-4954-be0a-f758a4e087ce",
                  "parentUUID": "b50b1111-e70f-47bb-9a15-32eadd5e917f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0b0945b4-8db3-4a9a-9ba2-5bee648209fd",
                "2914ec36-dd3a-4c8b-aa1a-fa228d8cb390",
                "e2f9af79-51bd-4c22-806d-7ce2a281479e",
                "fa0913c4-4298-4c17-b59b-9df989774a78",
                "637c20a5-7bdf-439d-b1fd-809e182d6294",
                "e3fbdcc9-4689-4954-be0a-f758a4e087ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 81,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "887b4d79-a225-4892-a356-29d93163e033",
              "title": "/Login",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Login\"",
                  "fullTitle": "API /Login \"before all\" hook in \"/Login\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/register', hooks.user).then();",
                  "err": {},
                  "uuid": "246150c1-93c9-48c8-a902-493a4d0688cd",
                  "parentUUID": "887b4d79-a225-4892-a356-29d93163e033",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Login\"",
                  "fullTitle": "API /Login \"after all\" hook in \"/Login\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});",
                  "err": {},
                  "uuid": "7cf23e62-0d3f-4f10-ac71-239e0cde685d",
                  "parentUUID": "887b4d79-a225-4892-a356-29d93163e033",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Login",
                  "fullTitle": "API /Login [1]- Login",
                  "timedOut": false,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {\n    email: hooks.user.email,\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(202);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "9a42c640-3c3d-4c9e-a611-e811c1952277",
                  "parentUUID": "887b4d79-a225-4892-a356-29d93163e033",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Empty Schema",
                  "fullTitle": "API /Login [2]- Empty Schema",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "280c198f-df9b-40a4-b674-3d0c5e29cdc9",
                  "parentUUID": "887b4d79-a225-4892-a356-29d93163e033",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Invalid Login",
                  "fullTitle": "API /Login [3]- Invalid Login",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {\n    email: '123@123.com',\n    password: hooks.user.password\n}).then(function(res){\n    expect(res.status).to.equal(409);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "398bdaa3-ccba-40a6-b872-0a30ce61b941",
                  "parentUUID": "887b4d79-a225-4892-a356-29d93163e033",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Invalid Fields",
                  "fullTitle": "API /Login [4]- Invalid Fields",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.auth('/login', {\n    firstName: hooks.user.firstName,\n    email: hooks.user.email,\n    password: hooks.user.password,\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "89299d1e-6c6e-4ce8-83bf-cc089a49d863",
                  "parentUUID": "887b4d79-a225-4892-a356-29d93163e033",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9a42c640-3c3d-4c9e-a611-e811c1952277",
                "280c198f-df9b-40a4-b674-3d0c5e29cdc9",
                "398bdaa3-ccba-40a6-b872-0a30ce61b941",
                "89299d1e-6c6e-4ce8-83bf-cc089a49d863"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 46,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5a31a175-db02-4860-ae12-3edd1928ebc8",
              "title": "/Module",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Module\"",
                  "fullTitle": "API /Module \"before all\" hook in \"/Module\"",
                  "timedOut": false,
                  "duration": 18,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function(res){\n    token = res.body.token;\n});",
                  "err": {},
                  "uuid": "7d50a095-895f-4aa2-88d4-a79e9a162262",
                  "parentUUID": "5a31a175-db02-4860-ae12-3edd1928ebc8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook for \"[7]- Invalid Update Module\"",
                  "fullTitle": "API /Module \"after all\" hook for \"[7]- Invalid Update Module\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});",
                  "err": {
                    "message": "ReferenceError: Uf is not defined",
                    "estack": "ReferenceError: Uf is not defined\n    at Context.<anonymous> (test/module.test.js:35:9)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                    "diff": null
                  },
                  "uuid": "7728c581-10f7-4fae-923e-06e53f0987ae",
                  "parentUUID": "5a31a175-db02-4860-ae12-3edd1928ebc8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create Module",
                  "fullTitle": "API /Module [1]- Create Module",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/module', token, hooks.module).then(function(res){\n    expect(res.status).to.equal(201);\n    module_id = res.body.body._id;\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "15aaf90f-35df-4551-b41b-d76d3f8845b3",
                  "parentUUID": "5a31a175-db02-4860-ae12-3edd1928ebc8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Create Module Unauthorized",
                  "fullTitle": "API /Module [2]- Create Module Unauthorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/module', token + \"00\", hooks.module).then(function(res){\n    expect(res.status).to.equal(401);\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "a5965da8-3b89-4bdb-a67e-4d1532f0e111",
                  "parentUUID": "5a31a175-db02-4860-ae12-3edd1928ebc8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Invalid Schema",
                  "fullTitle": "API /Module [3]- Invalid Schema",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/module', token, {}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "5f568ad4-916f-41b3-b5af-1a4bb56a6b3c",
                  "parentUUID": "5a31a175-db02-4860-ae12-3edd1928ebc8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Archive Module",
                  "fullTitle": "API /Module [4]- Archive Module",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/module/${module_id}/archive`, token, { archived: true }).then(function(res){\n    expect(res.body.body.archived).to.equal(true);\n    expect(res.status).to.equal(200);\n    done();\n\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "87d2add5-1d1d-444d-a322-d4add97c34f9",
                  "parentUUID": "5a31a175-db02-4860-ae12-3edd1928ebc8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Get Module",
                  "fullTitle": "API /Module [5]- Get Module",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/module/${module_id}`, token).then(function(res){\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "c208c8eb-b726-4fa7-95b8-76209113a5a5",
                  "parentUUID": "5a31a175-db02-4860-ae12-3edd1928ebc8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Update Module",
                  "fullTitle": "API /Module [6]- Update Module",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/module/${module_id}`, token, {\n    name: \"Edited\",\n    color: hooks.module.color\n}).then(function(res){\n    expect(res.body.body.name).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "e4c91223-02d0-4167-8362-da8d96cbfb85",
                  "parentUUID": "5a31a175-db02-4860-ae12-3edd1928ebc8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Invalid Update Module",
                  "fullTitle": "API /Module [7]- Invalid Update Module",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/module/${module_id}`, token, {\n    name: \"\",\n    color: hooks.module.color\n}).then(function(res){\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function(err){ done(err); });",
                  "err": {},
                  "uuid": "2e23bf29-25b0-4fbe-9f04-2743a8ebb15e",
                  "parentUUID": "5a31a175-db02-4860-ae12-3edd1928ebc8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "15aaf90f-35df-4551-b41b-d76d3f8845b3",
                "a5965da8-3b89-4bdb-a67e-4d1532f0e111",
                "5f568ad4-916f-41b3-b5af-1a4bb56a6b3c",
                "87d2add5-1d1d-444d-a322-d4add97c34f9",
                "c208c8eb-b726-4fa7-95b8-76209113a5a5",
                "e4c91223-02d0-4167-8362-da8d96cbfb85",
                "2e23bf29-25b0-4fbe-9f04-2743a8ebb15e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 38,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "168442c8-c714-4f25-98aa-4ae75d8e45b6",
              "title": "/Uf",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook for \"[1]- Create UF\"",
                  "fullTitle": "API /Uf \"before all\" hook for \"[1]- Create UF\"",
                  "timedOut": true,
                  "duration": 2003,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    uf.moduleId = res.body.body._id;\n});",
                  "err": {
                    "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/school/api/test/test.js)",
                    "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/school/api/test/test.js)\n    at listOnTimeout (internal/timers.js:554:17)\n    at processTimers (internal/timers.js:497:7)",
                    "diff": null
                  },
                  "uuid": "c5872090-54b6-469b-94cb-8d09860893bc",
                  "parentUUID": "168442c8-c714-4f25-98aa-4ae75d8e45b6",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Uf\"",
                  "fullTitle": "API /Uf \"after all\" hook in \"/Uf\"",
                  "timedOut": false,
                  "duration": 5,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});",
                  "err": {},
                  "uuid": "3c767ae8-9273-4325-b111-8f5c2be345f2",
                  "parentUUID": "168442c8-c714-4f25-98aa-4ae75d8e45b6",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create UF",
                  "fullTitle": "API /Uf [1]- Create UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/uf/create', token, uf).then(function (res) {\n    expect(res.status).to.equal(201);\n    uf_id = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "044d9c1b-c939-4a17-be4d-f62c88135736",
                  "parentUUID": "168442c8-c714-4f25-98aa-4ae75d8e45b6",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[2]- Create UF Unauthorized",
                  "fullTitle": "API /Uf [2]- Create UF Unauthorized",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/uf/create', {}, uf).then(function (res) {\n    expect(res.status).to.equal(401);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "9e9853ec-2aae-46dd-b975-ddbc529be02d",
                  "parentUUID": "168442c8-c714-4f25-98aa-4ae75d8e45b6",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[3]- Invalid UF Schema ",
                  "fullTitle": "API /Uf [3]- Invalid UF Schema ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/uf/create', token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "8b1ab734-0994-46d1-8225-b61d8bfdb947",
                  "parentUUID": "168442c8-c714-4f25-98aa-4ae75d8e45b6",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[4]- Update UF",
                  "fullTitle": "API /Uf [4]- Update UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uf.name = \"Edited\"\nrequest.edit(`/uf/${uf_id}/edit`, token, uf).then(function (res) {\n    expect(res.body.body.name).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "3eab03d1-8963-4b7e-8f1e-7a3d6be3fd0f",
                  "parentUUID": "168442c8-c714-4f25-98aa-4ae75d8e45b6",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[5]- Get UF",
                  "fullTitle": "API /Uf [5]- Get UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/uf/${uf_id}`, token, uf).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "acd4939c-71d7-4eed-9ea2-bfaf24fa3ee6",
                  "parentUUID": "168442c8-c714-4f25-98aa-4ae75d8e45b6",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[6]- Get Invalid UF",
                  "fullTitle": "API /Uf [6]- Get Invalid UF",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/uf/${uf_id + \"0\"}`, token, uf).then(function (res) {\n    expect(res.status).to.equal(500);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "0d29e28d-8302-416f-8f83-f37f0f824299",
                  "parentUUID": "168442c8-c714-4f25-98aa-4ae75d8e45b6",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[7]- Create UF - Invalid Module",
                  "fullTitle": "API /Uf [7]- Create UF - Invalid Module",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uf.moduleId = \"62575d1ddc2246861a6998e9\";\nrequest.post('/uf/create', token, uf).then(function (res) {\n    expect(res.status).to.equal(500);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "e6fb59fd-13b8-402c-be30-fad005e4b178",
                  "parentUUID": "168442c8-c714-4f25-98aa-4ae75d8e45b6",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "044d9c1b-c939-4a17-be4d-f62c88135736",
                "9e9853ec-2aae-46dd-b975-ddbc529be02d",
                "8b1ab734-0994-46d1-8225-b61d8bfdb947",
                "3eab03d1-8963-4b7e-8f1e-7a3d6be3fd0f",
                "acd4939c-71d7-4eed-9ea2-bfaf24fa3ee6",
                "0d29e28d-8302-416f-8f83-f37f0f824299",
                "e6fb59fd-13b8-402c-be30-fad005e4b178"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "46c582f2-0efa-4f5e-b0be-cbbc70cd2cfd",
              "title": "/Task",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Task\"",
                  "fullTitle": "API /Task \"before all\" hook in \"/Task\"",
                  "timedOut": false,
                  "duration": 80,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    uf.moduleId = res.body.body._id;\n});\nawait request.post('/uf/create', token, uf).then(function(res){\n    task.ufId = res.body.body._id;\n});",
                  "err": {},
                  "uuid": "c6cb1288-99bb-4aa3-a4b7-9c916a1b91f5",
                  "parentUUID": "46c582f2-0efa-4f5e-b0be-cbbc70cd2cfd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Task\"",
                  "fullTitle": "API /Task \"after all\" hook in \"/Task\"",
                  "timedOut": false,
                  "duration": 3,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});\nawait Task.deleteMany({});",
                  "err": {},
                  "uuid": "aecd363f-6f84-4fb5-a674-43dd319a5a4f",
                  "parentUUID": "46c582f2-0efa-4f5e-b0be-cbbc70cd2cfd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create Task",
                  "fullTitle": "API /Task [1]- Create Task",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task/create', token, task).then(function (res) {\n    expect(res.status).to.equal(201);\n    taskId = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "52457cd1-4ceb-4d40-b041-d58627aa48b2",
                  "parentUUID": "46c582f2-0efa-4f5e-b0be-cbbc70cd2cfd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Edit Task",
                  "fullTitle": "API /Task [2]- Edit Task",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "task.name = \"Edited\";\nrequest.edit(`/task/${taskId}/edit`, token, task).then(function (res) {\n    expect(res.body.body.name).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "2eec3f24-13f1-4d25-998a-63d5689946bd",
                  "parentUUID": "46c582f2-0efa-4f5e-b0be-cbbc70cd2cfd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Get Task",
                  "fullTitle": "API /Task [3]- Get Task",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/task/${taskId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "f45ec01d-2dfa-43da-a6e8-5666707e2419",
                  "parentUUID": "46c582f2-0efa-4f5e-b0be-cbbc70cd2cfd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Create Invalid Schema Task",
                  "fullTitle": "API /Task [4]- Create Invalid Schema Task",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task/create', token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "66d5d199-df42-4511-a8a0-02541e156dbd",
                  "parentUUID": "46c582f2-0efa-4f5e-b0be-cbbc70cd2cfd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Update Invalid Schema Task",
                  "fullTitle": "API /Task [5]- Update Invalid Schema Task",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/task/${taskId}/edit`, token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "f49b138c-b803-4477-b032-11d9de67ae2b",
                  "parentUUID": "46c582f2-0efa-4f5e-b0be-cbbc70cd2cfd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Create Invalid UfId Task",
                  "fullTitle": "API /Task [6]- Create Invalid UfId Task",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let taskTemp = {\n    ufId: \"6259e3e95f71a80819cb020b\",\n    name: task.name,\n    description: task.description,\n    grade: task.grade,\n    dueDate: task.dueDate\n};\n\nrequest.edit(`/task/${taskId}/edit`, token, taskTemp).then(function (res) {\n    expect(res.status).to.equal(404);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "6c0df7cf-68f1-40df-8d19-de711c5adeaa",
                  "parentUUID": "46c582f2-0efa-4f5e-b0be-cbbc70cd2cfd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Delete Task",
                  "fullTitle": "API /Task [6]- Delete Task",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/task/${taskId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "95503f4c-bfa1-44ea-bfdb-ac53c235189c",
                  "parentUUID": "46c582f2-0efa-4f5e-b0be-cbbc70cd2cfd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Delete Non Existent Task",
                  "fullTitle": "API /Task [7]- Delete Non Existent Task",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/task/${taskId}/delete`, token, {}).then(function (res) {\n    console.log(res.body);\n    expect(res.status).to.equal(500);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "5f2a4647-379f-49b1-8f18-6a32a12bb8ed",
                  "parentUUID": "46c582f2-0efa-4f5e-b0be-cbbc70cd2cfd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52457cd1-4ceb-4d40-b041-d58627aa48b2",
                "2eec3f24-13f1-4d25-998a-63d5689946bd",
                "f45ec01d-2dfa-43da-a6e8-5666707e2419",
                "66d5d199-df42-4511-a8a0-02541e156dbd",
                "f49b138c-b803-4477-b032-11d9de67ae2b",
                "6c0df7cf-68f1-40df-8d19-de711c5adeaa",
                "95503f4c-bfa1-44ea-bfdb-ac53c235189c",
                "5f2a4647-379f-49b1-8f18-6a32a12bb8ed"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 53,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5501b26f-4a6a-469a-afda-ea5b180c8516",
              "title": "/Truancy",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Truancy\"",
                  "fullTitle": "API /Truancy \"before all\" hook in \"/Truancy\"",
                  "timedOut": false,
                  "duration": 32,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    moduleId = res.body.body._id;\n});\nawait request.post('/uf/create', token, {\n    moduleId: moduleId,\n    ...hooks.uf\n}).then(function (res) {\n    truancy.ufId = res.body.body._id;\n});",
                  "err": {},
                  "uuid": "51601590-360c-44ba-9a29-b256a818d873",
                  "parentUUID": "5501b26f-4a6a-469a-afda-ea5b180c8516",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Truancy\"",
                  "fullTitle": "API /Truancy \"after all\" hook in \"/Truancy\"",
                  "timedOut": false,
                  "duration": 4,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});\nawait Truancy.deleteMany({});",
                  "err": {},
                  "uuid": "7fc7e14d-0920-4002-9b63-c80acc4b79bd",
                  "parentUUID": "5501b26f-4a6a-469a-afda-ea5b180c8516",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create Truancy",
                  "fullTitle": "API /Truancy [1]- Create Truancy",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/truancy/create', token, truancy).then(function (res) {\n    expect(res.status).to.equal(201);\n    truancyId = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "4f74058f-d2a8-4479-b677-c61a761095aa",
                  "parentUUID": "5501b26f-4a6a-469a-afda-ea5b180c8516",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Create Truancy Unauthorized",
                  "fullTitle": "API /Truancy [2]- Create Truancy Unauthorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/truancy/create', {}, truancy).then(function (res) {\n    expect(res.status).to.equal(401);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "bd0781b9-8a6b-4b36-9929-dcb1e898a5b1",
                  "parentUUID": "5501b26f-4a6a-469a-afda-ea5b180c8516",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Update Truancy",
                  "fullTitle": "API /Truancy [3]- Update Truancy",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "truancy.reason = \"Edited\";\nrequest.edit(`/truancy/${truancyId}/edit`, token, truancy).then(function (res) {\n    expect(res.body.body.reason).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "07d4551a-7eb7-4de8-9abe-4f89f9e466d8",
                  "parentUUID": "5501b26f-4a6a-469a-afda-ea5b180c8516",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Get Truancy",
                  "fullTitle": "API /Truancy [4]- Get Truancy",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "truancy.reason = \"Edited\";\nrequest.get(`/truancy/${truancyId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "38a6b8a3-ba98-4b39-b26a-f3ec4e75b147",
                  "parentUUID": "5501b26f-4a6a-469a-afda-ea5b180c8516",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Update Invalid Schema Truancy",
                  "fullTitle": "API /Truancy [5]- Update Invalid Schema Truancy",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/truancy/${truancyId}/edit`, token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "5c02c626-a4bc-41e2-9b11-7e157e749f1d",
                  "parentUUID": "5501b26f-4a6a-469a-afda-ea5b180c8516",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Delete Truancy",
                  "fullTitle": "API /Truancy [6]- Delete Truancy",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/truancy/${truancyId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "75bd7421-53e5-4d9b-9618-1cf4b83697fc",
                  "parentUUID": "5501b26f-4a6a-469a-afda-ea5b180c8516",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Get Truancy After Delete",
                  "fullTitle": "API /Truancy [7]- Get Truancy After Delete",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/truancy/${truancyId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(404);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "7ccc920b-84e9-4b94-b863-54dd85e89efc",
                  "parentUUID": "5501b26f-4a6a-469a-afda-ea5b180c8516",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f74058f-d2a8-4479-b677-c61a761095aa",
                "bd0781b9-8a6b-4b36-9929-dcb1e898a5b1",
                "07d4551a-7eb7-4de8-9abe-4f89f9e466d8",
                "38a6b8a3-ba98-4b39-b26a-f3ec4e75b147",
                "5c02c626-a4bc-41e2-9b11-7e157e749f1d",
                "75bd7421-53e5-4d9b-9618-1cf4b83697fc",
                "7ccc920b-84e9-4b94-b863-54dd85e89efc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 34,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "905a0866-51df-4dc9-ad87-c47403bc14a9",
              "title": "/Rule",
              "fullFile": "/home/school/api/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"/Rule\"",
                  "fullTitle": "API /Rule \"before all\" hook in \"/Rule\"",
                  "timedOut": false,
                  "duration": 33,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.auth('/register', hooks.user).then(function (res) {\n    token = res.body.token;\n});\nawait request.post('/module', token, hooks.module).then(function (res) {\n    moduleId = res.body.body._id;\n});\nawait request.post('/uf/create', token, {\n    moduleId: moduleId,\n    ...hooks.uf\n}).then(function (res) {\n    rule.ufId = res.body.body._id;\n});",
                  "err": {},
                  "uuid": "cd650b26-de1a-43c0-bc81-4dcaa0825859",
                  "parentUUID": "905a0866-51df-4dc9-ad87-c47403bc14a9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"/Rule\"",
                  "fullTitle": "API /Rule \"after all\" hook in \"/Rule\"",
                  "timedOut": false,
                  "duration": 3,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await User.deleteMany({});\nawait Module.deleteMany({});\nawait Uf.deleteMany({});\nawait Rule.deleteMany({});",
                  "err": {},
                  "uuid": "5e444a49-723b-4cce-b42c-8e4383245ee6",
                  "parentUUID": "905a0866-51df-4dc9-ad87-c47403bc14a9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "[1]- Create Rule",
                  "fullTitle": "API /Rule [1]- Create Rule",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/rule/create', token, rule).then(function (res) {\n    expect(res.status).to.equal(201);\n    ruleId = res.body.body._id;\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "3c5e237f-49f9-4b57-bc7c-320fe18a0442",
                  "parentUUID": "905a0866-51df-4dc9-ad87-c47403bc14a9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[2]- Create Rule Unauthorized",
                  "fullTitle": "API /Rule [2]- Create Rule Unauthorized",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/rule/create', {}, rule).then(function (res) {\n    expect(res.status).to.equal(401);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "fa07149d-89ca-45ce-90be-14dcda808005",
                  "parentUUID": "905a0866-51df-4dc9-ad87-c47403bc14a9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[3]- Update Rule",
                  "fullTitle": "API /Rule [3]- Update Rule",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "rule.title = \"Edited\";\nrequest.edit(`/rule/${ruleId}/edit`, token, rule).then(function (res) {\n    expect(res.body.body.title).to.equal(\"Edited\");\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "e3cb9e75-c63f-4784-8c96-1dc1da16a0a7",
                  "parentUUID": "905a0866-51df-4dc9-ad87-c47403bc14a9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[4]- Get Rule",
                  "fullTitle": "API /Rule [4]- Get Rule",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/rule/${ruleId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "f32bb7aa-f92d-4ff9-8842-97a7379c6443",
                  "parentUUID": "905a0866-51df-4dc9-ad87-c47403bc14a9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Get Rules from UF",
                  "fullTitle": "API /Rule [5]- Get Rules from UF",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get(`/rule/uf/${rule.ufId}`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "b1991a6c-ae1c-49d0-a5a9-3c9ab0e36671",
                  "parentUUID": "905a0866-51df-4dc9-ad87-c47403bc14a9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[5]- Update Invalid Schema Rule",
                  "fullTitle": "API /Rule [5]- Update Invalid Schema Rule",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.edit(`/rule/${ruleId}/edit`, token, {}).then(function (res) {\n    expect(res.status).to.equal(406);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "79cc1ead-dcda-404f-9728-fffac3c8872f",
                  "parentUUID": "905a0866-51df-4dc9-ad87-c47403bc14a9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[6]- Delete Rule",
                  "fullTitle": "API /Rule [6]- Delete Rule",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/rule/${ruleId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(200);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "2777f384-5157-447c-a6e5-27326158ff5a",
                  "parentUUID": "905a0866-51df-4dc9-ad87-c47403bc14a9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[7]- Get Rule After Delete",
                  "fullTitle": "API /Rule [7]- Get Rule After Delete",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete(`/rule/${ruleId}/delete`, token, {}).then(function (res) {\n    expect(res.status).to.equal(404);\n    done();\n}).catch(function (err) { done(err); });",
                  "err": {},
                  "uuid": "663a78e3-b06a-4c2c-a22b-48a091c0e888",
                  "parentUUID": "905a0866-51df-4dc9-ad87-c47403bc14a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3c5e237f-49f9-4b57-bc7c-320fe18a0442",
                "fa07149d-89ca-45ce-90be-14dcda808005",
                "e3cb9e75-c63f-4784-8c96-1dc1da16a0a7",
                "f32bb7aa-f92d-4ff9-8842-97a7379c6443",
                "b1991a6c-ae1c-49d0-a5a9-3c9ab0e36671",
                "79cc1ead-dcda-404f-9728-fffac3c8872f",
                "2777f384-5157-447c-a6e5-27326158ff5a",
                "663a78e3-b06a-4c2c-a22b-48a091c0e888"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 43,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "public"
      },
      "version": "6.2.0"
    }
  }
}